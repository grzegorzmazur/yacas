
Chapter()"Linear Algebra";



AddAnchor("LeviCivita");
SubSection()"LeviCivita({list})";
Text()"LeviCivita({list}) :
\"LeviCivita\" implements the Levi Civita symbol. This is generally
useful for tensor calculus.  {list}  should be a list of integers,
and this function returns 1 if the integers are in successive order,
eg.  {1,2,3,...}  would return 1. Swapping two elements of this
list would return -1. So, LeviCivita( {2,1,3} ) would evaluate
to -1.
";

AddAnchor("Permutations");
SubSection()"Permutations({list})";
Text()"Permutations({list}) :
Permutations returns a list with all the premutations of the original
list.
";

AddAnchor("InProduct");
SubSection()"InProduct(a,b)";
Text()"InProduct(a,b) (or alternatively a . b) :
Calculate the inproduct of two vectors.
";

AddAnchor("CrossProduct");
SubSection()"CrossProduct(a,b)";
Text()"CrossProduct(a,b) (or alternatively a X b) :
Calculate the crossproduct of two three-dimensional vectors.
";

AddAnchor("ZeroVector");
SubSection()"ZeroVector(n)";
Text()"ZeroVector(n) : ZeroVector returns a list with n zeroes.
";

AddAnchor("BaseVector");
SubSection()"BaseVector(row,n)";
Text()"BaseVector(row,n) : BaseVector returns a vector with item row set to 1, the
other n-1 set to zero.

";

AddAnchor("Identity");
SubSection()"Identity(n)";
Text()"Identity(n) : Identity returns a identity matrix of dimension n x n.
";


AddAnchor("IsMatrix");
SubSection()"IsMatrix(x)";
Text()"IsMatrix(x) : Predicates checking if the object x is a matrix.
";

AddAnchor("Normalize");
SubSection()"Normalize(v)";
Text()"Normalize(v) : Return the normalized vector v.

";

AddAnchor("ZeroMatrix");
SubSection()"ZeroMatrix(n,m)";
Text()"ZeroMatrix(n,m) : Returns a matrix with n rows and m columns, all zeros.

";

AddAnchor("Transpose");
SubSection()"Transpose(M)";
Text()"Transpose(M) : Return the transpose of a matrix M.
";

AddAnchor("Determinant");
SubSection()"Determinant(M)";
Text()"Determinant(M) : Return the determinant of a matrix M.
";

AddAnchor("DiagonalMatrix");
SubSection()"DiagonalMatrix(v)";
Text()"DiagonalMatrix(v) : Return a square matrix with the elements of vector
v on the diagonal of the matrix. All other elements are zero.

";

AddAnchor("Trace");
SubSection()"Trace(M)";
Text()"Trace(M) : Return the trace of a matrix M (defined as the sum of the
elements on the diagonal of the matrix).

";

AddAnchor("Inverse");
SubSection()"Inverse(M)";
Text()"Inverse(M) : Return the inverse of matrix M. The determinant of M should
be non-zero.

";

AddAnchor("CoFactor");
SubSection()"CoFactor(M,i,j)";
Text()"CoFactor(M,i,j) : This function returns the cofactor of a matrix around
the element (i,j). The cofactor is the minor times
(-1)^(i+j)

";

AddAnchor("Minor");
SubSection()"Minor(M,i,j)";
Text()"Minor(M,i,j) : This function returns the minor of a matrix around
the element (i,j). The minor is the determinant of the matrix
excluding the ith row and jth column.

";

AddAnchor("SolveMatrix");
SubSection()"SolveMatrix(M,v)";
Text()"SolveMatrix(M,v) : This function returns the vector x that satisfies
the equation \"M x = v\". The determinant of M should be non-zero.

";

AddAnchor("CharacteristicEquation");
SubSection()"CharacteristicEquation(matrix,var)";
Text()"CharacteristicEquation(matrix,var) : 
calculate characteristic equation of \"matrix\", using
\"var\". The zeros os this equation are the eigenvalues
of the matrix, Det(matrix-I var);
";

AddAnchor("EigenValues");
SubSection()"EigenValues";
StandardLib();

Topical()"Calling Sequence";
Text()"EigenValues(matrix)";

Topical()"Parameters";
Text()"matrix - a square matrix";

Topical()"Description";
Text()"EigenValues returns the eigenvalues of a matrix.
The eigenvalues x of a matrix M are the numbers such that
M*v=x*v for some vector.<BR>
It first determines the characteristic equation, and then factorizes this
equation, returning the roots of the characteristic equation
det(matrix-x*identity).";

Topical()"Examples";
Text()
HtmlCommand(
"
In> M:={{1,2},{2,1}}
Out> {{1,2},{2,1}};
In> EigenValues(M)
Out> {3,-1};
");

Topical()"See Also"; 
SeeAlso({"EigenVectors","CharacteristicEquation"});







AddAnchor("EigenVectors");
SubSection()"EigenVectors";
StandardLib();

Topical()"Calling Sequence";
Text()"EigenVectors(matrix,eigenvalues)";
StandardLib();

Topical()"Parameters";
Text()
"matrix - matrix - a square matrix <br>
 eigenvalues - list of eigenvalues as returned by EigenValues
";
   
Topical()"Description";
Text()"EigenVectors returns a list of the eigenvectors of a matrix.
It uses the eigenvalues and the matrix to set up n equations with
n unknowns for each eigenvalue, and then calls Solve to determine
the values of each vector.";

Topical()"Examples";
Text()
HtmlCommand(
"In> M:={{1,2},{2,1}}
Out> {{1,2},{2,1}};
In> e:=EigenValues(M)
Out> {3,-1};
In> EigenVectors(M,e)
Out> {{-ki2/ -1,ki2},{-ki2,ki2}};
");

Topical()"See Also"; 
SeeAlso({"EigenValues","CharacteristicEquation"});
    


