

OMDef( "Not" ,  "logic1", "not" );
OMDef( "="  ,  "relation1", "eq"  );
OMDef( ">=" ,  "relation1", "geq" );
OMDef( ">"  ,  "relation1", "gt"  );
OMDef( "<=" ,  "relation1", "leq" );
OMDef( "<"  ,  "relation1", "lt"  );
OMDef( "!=" ,  "relation1", "neq" );
OMDef( "Gcd"  ,  "arith1", "gcd"  );
// Watch the definition of "NthRoot" in "../numbers.rep/om.ys".
// Depending on which file is loaded first, the translation from OpenMath
// of OMA(OMS("arith1", "root"), 16, 2) would be Sqrt(16) or IntNthRoot(16,2),
// which is not altering the meaning, but I think that using the square root
// when possible looks nicer.
OMDef( "Sqrt" ,  "arith1", "root", { $, _1, 2 }, $(_1)_(_2=2) | ({IntNthRoot,_1,_2}) );// Using IntNthRoot(_1,_2) works, but it produces the evaluated result.
// Test [result: Sqrt(16)]:
// FromString("<OMOBJ><OMA><OMS cd=\"arith1\" name=\"root\"/><OMI>16</OMI><OMI>2</OMI></OMA></OMOBJ> ")OMRead()
// Test [result: IntNthRoot(16,3))]:
// FromString("<OMOBJ><OMA><OMS cd=\"arith1\" name=\"root\"/><OMI>16</OMI><OMI>3</OMI></OMA></OMOBJ> ")OMRead()
OMDef( "Abs"  ,  "arith1", "abs"                     );
OMDef( "Lcm"  ,  "arith1", "lcm"                     );

OMDef( "Floor" ,  "rounding1", "floor"   );
OMDef( "Ceil"  ,  "rounding1", "ceiling" );
OMDef( "Round" ,  "rounding1", "round"   );

OMDef( "Div"    ,  "yacas", "div",    {} );
OMDef( "Mod"    ,  "yacas", "mod",    {} );
OMDef( "Expand" ,  "yacas", "expand", {} );
OMDef( "Object" ,  "yacas", "object", {} );
OMDef( "Sign"   ,  "yacas", "sign",   {} );
