
/* example using javascript for outputting a trace of an execution.
 * NiceTraceExp does the same as TraceExp, but exporting the result
 * as a html file with an expandable list (using javascript).
 * NiceTraceRule does the same, but for TraceRule.
 *
 * You can use this file standalone by typing Load("tracejscript"),
 * calling one of the NiceTrace.. functions and then starting up
 * netscape with trace.html.
 */


Indent() :=
[
  Local(result,i);
  Set(result,"");
  For(Set(i,Length(traceStack)),i>=1,Set(i,i-1)) [Set(result, result:"    ");];
  result;
];
Last(list) := list[Length(list)];


10 # Dump({_expand,_expr1,_expr2}) <--
[
      Write(expand);Space();Write(0);NewLine();
      WriteString(indent); WriteString(expr1); WriteString(expr2);NewLine();
];
10 # Dump({_expand,_expr1,_expr2,_file,0}) <-- 
[
      Write(expand);Space();Write(0);NewLine();
      WriteString(indent); WriteString(expr1); WriteString(expr2);NewLine();
];
20 # Dump({_expand,_expr1,_expr2,_file,_line}) <-- 
[
      Write(expand);Space();Write(line);NewLine();
      WriteString(file);NewLine();
      WriteString(indent); WriteString(expr1); WriteString(expr2);NewLine();
];

Dump():=
[
  Local(head);
  Set(head, Head(traceStack));
  ToFile(TraceFile(traceFile))
  [
    While(Not(Equals(head,{})))
    [
      Dump(Head(head));
      Set(head,Tail(head));
    ];
    Echo({"end"});
  ];
];

TrEnter(_function,_expr,_file,_line) <--
[
  If(GreaterThan(Length(expr),100),Set(expr,StringMid(1,100,expr):"..."));
  DestructiveAppend(Head(traceStack),{-1,"ENTER: ",expr,file,line});
  DestructiveInsert(traceStack,1,{});
  Set(indent, Indent());
];
HoldArg("TrEnter",arg1);


TrLeave(_expr,_result) <--
[
  if (Length(Head(traceStack)) > 0)
  [
    Dump();
    Set(traceStack, Tail(traceStack));
    Last(Head(traceStack))[1] := traceFile;
    Set(traceFile,traceFile+1);
  ]
  else
  [
    Set(traceStack, Tail(traceStack));
  ];
  Set(indent, Indent());
  DestructiveAppend(Head(traceStack),{-1,"LEAVE: ",result});
];
HoldArg("TrLeave",arg1);
HoldArg("TrLeave",arg2);


TraceFile(_i) <-- ("exp.":String(i));

ThunkToTracer() <--
[
  traceFile := 1;
  traceStack := {{}};
  indent := Indent();
  last:={};
  Load("trace.tmp");
  While(Length(traceStack)>1) TrLeave("STOPPED","STOPPED");
  Dump();
  traceStack := {{{traceFile,"BEGIN",""},{-1,"END",""}}};
  traceFile := 0;
  Dump();
];


NiceTraceExp(_expr) <--
[
  Local(res);
  res:=ToFile("trace.tmp")Eval(UnList({TraceExp,expr}));
  ThunkToTracer();
  res;
];
HoldArg("NiceTraceExp",arg1);


