
/*
  Simple function plotter using plotter
*/


/* Globals: dowidth, plist, mlist, crect*/
10 # FlPlot(f_IsList,_xfrom,_xto,_width) <--
(
[
  Local(dx,x,y,min,max,i,nr);
  dowidth := width;
  crect:={0,0,0,0};
  nr := Length(f);
  y:=FillList(0,Length(f));
  plist:=FillList(0,Length(f));
  dx:=(xto-xfrom);
  x := N(xfrom + dx*(0 .. (width-1) )/(width-1));
  y := N(Eval(f));

  min:=Min(Flatten(y,"List"));
  max:=Max(Flatten(y,"List"));
  max:=max-min;

  y:=y-min;
  if (max>0) [y:=y/max;];
  plist := Eval(y);

  Local(execute);
  execute:={};
  
  `[
    Local(dowidth,crect,plist);
    dowidth:=(@dowidth);
    crect:=(@crect);
    plist:=(@plist);
    @flplot2d2;
  ];
//  execute:=Hold(FlTranslate(FlWindow[1],FlWindow[2])):execute;
//  DestructiveAppend(execute,Hold(FlTranslate(-FlWindow[1],-FlWindow[2])));
  FlGraphStart(execute,320,240);
  True;
]);

20 # FlPlot(_f,_xfrom,_xto,_width) <--
     FlPlot({f},xfrom,xto,width);


GraphColorForLine(1) <-- FlColor(255,0,0);
GraphColorForLine(2) <-- FlColor(0,255,0);
GraphColorForLine(3) <-- FlColor(0,0,255);
GraphColorForLine(0) <-- FlColor(255,0,255);


Macro(ExB,{op,args})
[
  Local(a);
  Set(a,@args);
  DestructiveAppend(execute,UnList((@op):a));
];

  flplot2d2 := Hold(
  [
    Local(flx,fly,flw,flh,i,line,ll);
    
    flx:=0;
    fly:=0;
    flw:=FlWindowWidth;
    flh:=FlWindowHeight;

    Local(nr);
    nr := Length(plist);
    /* Get the screen extent */
//    if (crect != FlWindow) 
    [
      mlist:=FillList(0,nr);
      N(
      For(line:=1,line<=nr,line++)
      [
        ll:=FillList(0,dowidth);
        For(i:=1,i<=dowidth,i++)
        [
          ll[i] := N({flx+((i-1)*flw)/(dowidth-1),fly+flh-(plist[line][i]*flh)});
        ];
        mlist[line] := ll;
      ]);
    ];
//    crect := FlWindow;
    /* Clear the screen */
    ExB(FlColor,{192,192,192});
    ExB(FlBeginPolygon,{});
    ExB(FlVertex,{flx,fly});
    ExB(FlVertex,{flx,fly+flh});
    ExB(FlVertex,{flx+flw,fly+flh});
    ExB(FlVertex,{flx+flw,fly});
    ExB(FlEndPolygon,{});

    For(line:=1,line<=Length(mlist),line++)
    [
        Local(ll,h);
        ll:=mlist[line];
        ExB(GraphColorForLine,{line&3});
        ExB(FlBeginLine,{});
        For(i:=1,i<=dowidth,i++)
        [
          if (Length(ll)>0)
          [
            h:=Head(ll);
            if (IsList(h)) 
            if (Length(h) > 1)
              if (IsNumber(h[1]) And IsNumber(h[2]))
              [
                ExB(FlVertex,{h[1],h[2]});
              ];
            ll:=Tail(ll);
          ];
        ];
        ExB(FlEndLine,{});
     ];
   ]);




/*
  Frm(render,width,height);
FrmWidth(Frm(_r,_w,_h)) <-- w;
FrmHeight(Frm(_r,_w,_h)) <-- h;
FrmRender(Frm(_r,_w,_h)) <-- r;


10 # FrmForm(_x/_y)
   <--
   [
     x:=FrmForm(x);
     y:=FrmForm(y);
     Local(w);
     w:=Max(FrmWidth(x),FrmWidth(y));          
     
   ];

10 # FrmForm(x_IsAtom)
   <-- Frm();
*/



