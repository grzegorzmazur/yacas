
#ifndef __proteusmenu_h__
#define _proteusmenu_h__


static Fl_Menu_Item menuitems[] = 
{
 {"Func", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Complex", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Complex", 0,  cb_menu_insert, "Complex(", 0, 0, 0, 8, 0},
 {"Re", 0,  cb_menu_insert, "Re(", 0, 0, 0, 8, 0},
 {"Im", 0,  cb_menu_insert, "Im(", 0, 0, 0, 8, 0},
 {"I", 0,  cb_menu_insert, "I", 0, 0, 0, 8, 0},
 {0},
 {"Stat", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Sum", 0,  cb_menu_insert, "Sum(", 0, 0, 0, 8, 0},
 {"Min", 0, cb_menu_insert, "Min(", 0, 0, 0, 8, 0},
 {"Max", 0, cb_menu_insert, "Max(", 0, 0, 0, 8, 0},
 {"Bin", 0,  cb_menu_insert, "Bin(", 0, 0, 0, 8, 0},
 {"Average", 0, cb_menu_insert, "Average(", 0, 0, 0, 8, 0},
 {"!", 0,  cb_menu_insert, "!", 0, 0, 0, 8, 0},
 {0},
 {"Trig", 0,  0, 0, 64, 0, 0, 8, 0},
 {"TruncRadian", 0, cb_menu_insert, "TruncRadian(", 0, 0, 0, 8, 0},
 {"Tan", 0,  cb_menu_insert, "Tan(", 0, 0, 0, 8, 0},
 {"Sin", 0,  cb_menu_insert, "Sin(", 0, 0, 0, 8, 0},
 {"Cos", 0,  cb_menu_insert, "Cos(", 0, 0, 0, 8, 0},
 {"ArcTan", 0, cb_menu_insert, "ArcTan(", 0, 0, 0, 8, 0},
 {"ArcSin", 0, cb_menu_insert, "ArcSin(", 0, 0, 0, 8, 0},
 {"ArcCos", 0, cb_menu_insert, "ArcCos(", 0, 0, 0, 8, 0},
 {0},
 {"Calc", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Taylor", 0,  cb_menu_insert, "Taylor(", 0, 0, 0, 8, 0},
 {"Simplify", 0, cb_menu_insert, "Simplify(", 0, 0, 0, 8, 0},
 {"ReversePoly", 0,  cb_menu_insert, "ReversePoly(", 0, 0, 0, 8, 0},
 {"Newton", 0, cb_menu_insert, "Newton(", 0, 0, 0, 8, 0},
 {"InverseTaylor", 0,  cb_menu_insert, "InverseTaylor(", 0, 0, 0, 8, 0},
 {"Integrate", 0, cb_menu_insert, "Integrate(", 0, 0, 0, 8, 0},
 {"Expand", 0, cb_menu_insert, "Expand(", 0, 0, 0, 8, 0},
 {"Diverge", 0, cb_menu_insert, "Diverge(", 0, 0, 0, 8, 0},
 {"D", 0, cb_menu_insert, "D(", 0, 0, 0, 8, 0},
 {"Curl", 0, cb_menu_insert, "Curl(", 0, 0, 0, 8, 0},
 {0},
 {"Poly", 0,  0, 0, 64, 0, 0, 8, 0},
 {"PSolve", 0,  cb_menu_insert, "PSolve(", 0, 0, 0, 8, 0},
 {"PrimitivePart", 0,  cb_menu_insert, "PrimitivePart(", 0, 0, 0, 8, 0},
 {"RandomPoly", 0,  cb_menu_insert, "RandomPoly(", 0, 0, 0, 8, 0},
 {"Monic", 0,  cb_menu_insert, "Monic(", 0, 0, 0, 8, 0},
 {"Mod", 0,  cb_menu_insert, "Mod(", 0, 0, 0, 8, 0},
 {"LeadingCoef", 0,  cb_menu_insert, "LeadingCoef(", 0, 0, 0, 8, 0},
 {"Expand", 0, cb_menu_insert, "Expand(", 0, 0, 0, 8, 0},
 {"Div", 0,  cb_menu_insert, "Div(", 0, 0, 0, 8, 0},
 {"Degree", 0,  cb_menu_insert, "Degree(", 0, 0, 0, 8, 0},
 {"Content", 0,  cb_menu_insert, "Content(", 0, 0, 0, 8, 0},
 {"Coef", 0,  cb_menu_insert, "Coef(", 0, 0, 0, 8, 0},
 {"BigOh", 0,  cb_menu_insert, "BigOh(", 0, 0, 0, 8, 0},
 {0},
 {"Lin Alg", 0,  0, 0, 64, 0, 0, 8, 0},
 {"ZeroVector", 0, cb_menu_insert, "ZeroVector(", 0, 0, 0, 8, 0},
 {"ZeroMatrix", 0, cb_menu_insert, "ZeroMatrix(", 0, 0, 0, 8, 0},
 {"Transpose", 0, cb_menu_insert, "Transpose(", 0, 0, 0, 8, 0},
 {"Trace", 0, cb_menu_insert, "Trace(", 0, 0, 0, 8, 0},
 {"SolveMatrix", 0, cb_menu_insert, "SolveMatrix(", 0, 0, 0, 8, 0},
 {"Permutations", 0,  cb_menu_insert, "Permutations(", 0, 0, 0, 8, 0},
 {"Normalize", 0, cb_menu_insert, "Normalize(", 0, 0, 0, 8, 0},
 {"Minor", 0, cb_menu_insert, "Minor(", 0, 0, 0, 8, 0},
 {"LeviCivita", 0,  cb_menu_insert, "LeviCivita(", 0, 0, 0, 8, 0},
 {"IsUnitary", 0, cb_menu_insert, "IsUnitary(", 0, 0, 0, 8, 0},
 {"IsMatrix", 0, cb_menu_insert, "IsMatrix(", 0, 0, 0, 8, 0},
 {"IsHermitean", 0, cb_menu_insert, "IsHermitean(", 0, 0, 0, 8, 0},
 {"Inverse", 0, cb_menu_insert, "Inverse(", 0, 0, 0, 8, 0},
 {"InProduct", 0,  cb_menu_insert, "InProduct(", 0, 0, 0, 8, 0},
 {"Identity", 0, cb_menu_insert, "Identity(", 0, 0, 0, 8, 0},
 {"EigenVectors", 0, cb_menu_insert, "EigenVectors(", 0, 0, 0, 8, 0},
 {"EigenValues", 0, cb_menu_insert, "EigenValues(", 0, 0, 0, 8, 0},
 {"DiagonalMatrix", 0, cb_menu_insert, "DiagonalMatrix(", 0, 0, 0, 8, 0},
 {"Determinant", 0, cb_menu_insert, "Determinant(", 0, 0, 0, 8, 0},
 {"CrossProduct", 0, cb_menu_insert, "CrossProduct(", 0, 0, 0, 8, 0},
 {"BaseVector", 0, cb_menu_insert, "BaseVector(", 0, 0, 0, 8, 0},
 {"CoFactor", 0, cb_menu_insert, "CoFactor(", 0, 0, 0, 8, 0},
 {"CharacteristicEquation", 0, cb_menu_insert, "CharacteristicEquation(", 0, 0, 0, 8, 0},
 {0},
 {"Arith", 0,  0, 0, 64, 0, 0, 8, 0},
 {"ToBase", 0,  cb_menu_insert, "ToBase(", 0, 0, 0, 8, 0},
 {"Sqrt", 0,  cb_menu_insert, "Sqrt(", 0, 0, 0, 8, 0},
 {"Sign", 0,  cb_menu_insert, "Sign(", 0, 0, 0, 8, 0},
 {"Precision", 0,  cb_menu_insert, "Precision(", 0, 0, 0, 8, 0},
 {"Round", 0,  cb_menu_insert, "Round(", 0, 0, 0, 8, 0},
 {"Rationalize", 0,  cb_menu_insert, "Rationalize(", 0, 0, 0, 8, 0},
 {"Numer", 0,  cb_menu_insert, "Numer(", 0, 0, 0, 8, 0},
 {"N", 0,  cb_menu_insert, "N(", 0, 0, 0, 8, 0},
 {"Mod", 0,  cb_menu_insert, "Mod(", 0, 0, 0, 8, 0},
 {"Ln", 0,  cb_menu_insert, "Ln(", 0, 0, 0, 8, 0},
 {"Lcm", 0,  cb_menu_insert, "Lcm(", 0, 0, 0, 8, 0},
 {"IsZero", 0,  cb_menu_insert, "IsZero(", 0, 0, 0, 8, 0},
 {"IsRational", 0,  cb_menu_insert, "IsRational(", 0, 0, 0, 8, 0},
 {"GetPrecision", 0,  cb_menu_insert, "GetPrecision(", 0, 0, 0, 8, 0},
 {"Gcd", 0,  cb_menu_insert, "Gcd(", 0, 0, 0, 8, 0},
 {"FromBase", 0,  cb_menu_insert, "FromBase(", 0, 0, 0, 8, 0},
 {"Floor", 0,  cb_menu_insert, "Floor(", 0, 0, 0, 8, 0},
 {"Factors", 0,  cb_menu_insert, "Factors(", 0, 0, 0, 8, 0},
 {"Factorize", 0,  cb_menu_insert, "Factorize(", 0, 0, 0, 8, 0},
 {"Factor", 0,  cb_menu_insert, "Factor(", 0, 0, 0, 8, 0},
 {"Exp", 0,  cb_menu_insert, "Exp(", 0, 0, 0, 8, 0},
 {"Div", 0,  cb_menu_insert, "Div(", 0, 0, 0, 8, 0},
 {"Denom", 0,  cb_menu_insert, "Denom(", 0, 0, 0, 8, 0},
 {"Commutator", 0,  cb_menu_insert, "Commutator(", 0, 0, 0, 8, 0},
 {"Ceil", 0,  cb_menu_insert, "Ceil(", 0, 0, 0, 8, 0},
 {"Abs", 0,  cb_menu_insert, "Abs(", 0, 0, 0, 8, 0},
 {0},
 {0},
 {"Prog", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Functional", 0,  0, 0, 64, 0, 0, 8, 0},
 {":", 0,  cb_menu_insert, ":", 0, 0, 0, 8, 0},
 {"@", 0,  cb_menu_insert, "@", 0, 0, 0, 8, 0},
 {"/@", 0,  cb_menu_insert, "/@", 0, 0, 0, 8, 0},
 {"..", 0,  cb_menu_insert, "..", 0, 0, 0, 8, 0},
 {0},
 {"I/O", 0,  0, 0, 64, 0, 0, 8, 0},
 {"FullForm", 0,  cb_menu_insert, "FullForm(", 0, 0, 0, 8, 0},
 {"Echo", 0,  cb_menu_insert, "Echo(", 0, 0, 0, 8, 0},
 {"PrettyForm", 0,  cb_menu_insert, "PrettyForm(", 0, 0, 0, 8, 0},
 {"Write", 0,  cb_menu_insert, "Write(", 0, 0, 0, 8, 0},
 {"WriteString", 0,  cb_menu_insert, "WriteString(", 0, 0, 0, 8, 0},
 {"Space", 0,  cb_menu_insert, "Space(", 0, 0, 0, 8, 0},
 {"NewLine", 0,  cb_menu_insert, "NewLine(", 0, 0, 0, 8, 0},
 {"FromFile", 0,  cb_menu_insert, "FromFile(", 0, 0, 0, 8, 0},
 {"FromString", 0,  cb_menu_insert, "FromString(", 0, 0, 0, 8, 0},
 {"ToString()", 0,  cb_menu_insert, "ToString()", 0, 0, 0, 8, 0},
 {"Read()", 0,  cb_menu_insert, "Read()", 0, 0, 0, 8, 0},
 {"LispRead()", 0,  cb_menu_insert, "LispRead()", 0, 0, 0, 8, 0},
 {"ReadToken()", 0,  cb_menu_insert, "ReadToken()", 0, 0, 0, 8, 0},
 {"ToFile", 0,  cb_menu_insert, "ToFile(", 0, 0, 0, 8, 0},
 {"Load", 0,  cb_menu_insert, "Load(", 0, 0, 0, 8, 0},
 {"Use", 0,  cb_menu_insert, "Use(", 0, 0, 0, 8, 0},
 {"DefLoad", 0,  cb_menu_insert, "DefLoad(", 0, 0, 0, 8, 0},
 {"FindFile", 0,  cb_menu_insert, "FindFile(", 0, 0, 0, 8, 0},
 {"PatchLoad", 0,  cb_menu_insert, "PatchLoad(", 0, 0, 0, 8, 0},
 {0},
 {"Contol", 0,  0, 0, 64, 0, 0, 8, 0},
 {"MaxEvalDepth", 0,  cb_menu_insert, "MaxEvalDepth(", 0, 0, 0, 8, 0},
 {"Hold", 0,  cb_menu_insert, "Hold(", 0, 0, 0, 8, 0},
 {"Eval", 0,  cb_menu_insert, "Eval(", 0, 0, 0, 8, 0},
 {"While", 0,  cb_menu_insert, "While(", 0, 0, 0, 8, 0},
 {"Until", 0,  cb_menu_insert, "Until(", 0, 0, 0, 8, 0},
 {"If", 0,  cb_menu_insert, "If(", 0, 0, 0, 8, 0},
 {"SystemCall", 0,  cb_menu_insert, "SystemCall(", 0, 0, 0, 8, 0},
 {"PatchString", 0,  cb_menu_insert, "PatchString(", 0, 0, 0, 8, 0},
 {"Function", 0,  cb_menu_insert, "Function(", 0, 0, 0, 8, 0},
 {"Use", 0,  cb_menu_insert, "Use(", 0, 0, 0, 8, 0},
 {"For", 0,  cb_menu_insert, "For(", 0, 0, 0, 8, 0},
 {"ForEach", 0,  cb_menu_insert, "ForEach(", 0, 0, 0, 8, 0},
 {"Apply", 0,  cb_menu_insert, "Apply(", 0, 0, 0, 8, 0},
 {"LocalSymbols", 0,  cb_menu_insert, "LocalSymbols(", 0, 0, 0, 8, 0},
 {"Subst", 0,  cb_menu_insert, "Subst(", 0, 0, 0, 8, 0},
 {"WithValue", 0,  cb_menu_insert, "WithValue(", 0, 0, 0, 8, 0},
 {"TraceStack", 0,  cb_menu_insert, "TraceStack(", 0, 0, 0, 8, 0},
 {"TraceExp", 0,  cb_menu_insert, "TraceExp(", 0, 0, 0, 8, 0},
 {"TraceRule", 0,  cb_menu_insert, "TraceRule(", 0, 0, 0, 8, 0},
 {0},
 {"Predicates", 0,  0, 0, 64, 0, 0, 8, 0},
 {"IsFreeOf", 0,  cb_menu_insert, "IfFreeOf(", 0, 0, 0, 8, 0},
 {"IsZeroVector", 0,  cb_menu_insert, "IsZeroVector(", 0, 0, 0, 8, 0},
 {"IsNonObject", 0,  cb_menu_insert, "InNonObject(", 0, 0, 0, 8, 0},
 {"IsEven", 0,  cb_menu_insert, "IsEven(", 0, 0, 0, 8, 0},
 {"IsOdd", 0,  cb_menu_insert, "IsOdd(", 0, 0, 0, 8, 0},
 {"IsFunction", 0,  cb_menu_insert, "IsFunction(", 0, 0, 0, 8, 0},
 {"IsAtom", 0,  cb_menu_insert, "IsAtom(", 0, 0, 0, 8, 0},
 {"IsString", 0,  cb_menu_insert, "IsString(", 0, 0, 0, 8, 0},
 {"IsNumber", 0,  cb_menu_insert, "IsNumber(", 0, 0, 0, 8, 0},
 {"IsInteger", 0,  cb_menu_insert, "IsInteger(", 0, 0, 0, 8, 0},
 {"IsList", 0,  cb_menu_insert, "IsList(", 0, 0, 0, 8, 0},
 {"IsBound", 0,  cb_menu_insert, "IsBound(", 0, 0, 0, 8, 0},
 {"IsBoolean", 0,  cb_menu_insert, "IsBoolean(", 0, 0, 0, 8, 0},
 {"IsNegativeNumber", 0,  cb_menu_insert, "IsNegativeNumber(", 0, 0, 0, 8, 0},
 {"IsNegativeInteger", 0,  cb_menu_insert, "IsNegativeInteger(", 0, 0, 0, 8, 0},
 {"IsPosivitveNumber", 0,  cb_menu_insert, "IsPositiveNumber(", 0, 0, 0, 8, 0},
 {"IsNotZero", 0,  cb_menu_insert, "IsNotZero(", 0, 0, 0, 8, 0},
 {"IsNonZeroInteger", 0,  cb_menu_insert, "IsNonZeroInteger(", 0, 0, 0, 8, 0},
 {"IsInfinity", 0,  cb_menu_insert, "IsInfinity(", 0, 0, 0, 8, 0},
 {"IsConstant", 0,  cb_menu_insert, "IsConstant(", 0, 0, 0, 8, 0},
 {"Not", 0,  cb_menu_insert, "Not", 0, 0, 0, 8, 0},
 {"And", 0,  cb_menu_insert, "And", 0, 0, 0, 8, 0},
 {"Or", 0,  cb_menu_insert, "Or", 0, 0, 0, 8, 0},
 {"<", 0,  cb_menu_insert, "<", 0, 0, 0, 8, 0},
 {">", 0,  cb_menu_insert, ">", 0, 0, 0, 8, 0},
 {"<=", 0,  cb_menu_insert, "<=", 0, 0, 0, 8, 0},
 {">=", 0,  cb_menu_insert, ">=", 0, 0, 0, 8, 0},
 {"!=", 0,  cb_menu_insert, "!=", 0, 0, 0, 8, 0},
 {"=", 0,  cb_menu_insert, "=", 0, 0, 0, 8, 0},
 {0},
 {"List", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Head", 0,  cb_menu_insert, "Head(", 0, 0, 0, 8, 0},
 {"Tail", 0,  cb_menu_insert, "Tail(", 0, 0, 0, 8, 0},
 {"Length", 0,  cb_menu_insert, "Length(", 0, 0, 0, 8, 0},
 {"Nth", 0,  cb_menu_insert, "Nth(", 0, 0, 0, 8, 0},
 {"Concat", 0,  cb_menu_insert, "Concat(", 0, 0, 0, 8, 0},
 {"Delete", 0,  cb_menu_insert, "Delete(", 0, 0, 0, 8, 0},
 {"Insert", 0,  cb_menu_insert, "Insert(", 0, 0, 0, 8, 0},
 {"Replace", 0,  cb_menu_insert, "Replace(", 0, 0, 0, 8, 0},
 {"FlatCopy", 0,  cb_menu_insert, "FlatCopy(", 0, 0, 0, 8, 0},
 {0},
 {0},
 {"Links", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Plot", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Load(\"flplot\")", 0,  cb_menu_insert, "Load(\"flplot\")", 0, 0, 0, 8, 0},
 {"FlPlot", 0,  cb_menu_insert, "FlPlot(", 0, 0, 0, 8, 0},
 {0},
 {"Braces", 0,  0, 0, 64, 0, 0, 8, 0},
 {"(", 0,  cb_menu_insert, "(", 0, 0, 0, 8, 0},
 {")", 0,  cb_menu_insert, ")", 0, 0, 0, 8, 0},
 {"{", 0,  cb_menu_insert, "{", 0, 0, 0, 8, 0},
 {"}", 0,  cb_menu_insert, "}", 0, 0, 0, 8, 0},
 {"[", 0,  cb_menu_insert, "[", 0, 0, 0, 8, 0},
 {"]", 0,  cb_menu_insert, "]", 0, 0, 0, 8, 0},
 {0},
 {"Constants", 0,  0, 0, 64, 0, 0, 8, 0},
 {"EndOfFile", 0,  cb_menu_insert, "EndOfFile", 0, 0, 0, 8, 0},
 {"Infinty", 0,  cb_menu_insert, "Infinity", 0, 0, 0, 8, 0},
 {"False", 0,  cb_menu_insert, "False", 0, 0, 0, 8, 0},
 {"True", 0,  cb_menu_insert, "True", 0, 0, 0, 8, 0},
 {"Pi", 0,  cb_menu_insert, "Pi", 0, 0, 0, 8, 0},
 {"%", 0,  cb_menu_insert, "%", 0, 0, 0, 8, 0},
 {0},
 {"Vars", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Local", 0,  cb_menu_insert, "Local(", 0, 0, 0, 8, 0},
 {"Clear", 0,  cb_menu_insert, "Clear(", 0, 0, 0, 8, 0},
 {"Set", 0,  cb_menu_insert, "Set(", 0, 0, 0, 8, 0},
 {"--", 0,  cb_menu_insert, "--", 0, 0, 0, 8, 0},
 {"++", 0,  cb_menu_insert, "++", 0, 0, 0, 8, 0},
 {":=", 0,  cb_menu_insert, ":=", 0, 0, 0, 8, 0},
 {"j", 0,  cb_menu_insert, "j", 0, 0, 0, 8, 0},
 {"i", 0,  cb_menu_insert, "i", 0, 0, 0, 8, 0},
 {"b", 0,  cb_menu_insert, "b", 0, 0, 0, 8, 0},
 {"a", 0,  cb_menu_insert, "a", 0, 0, 0, 8, 0},
 {"y", 0,  cb_menu_insert, "y", 0, 0, 0, 8, 0},
 {0},
 {0},
 {"Last", 0,  0, 0, 64, 0, 0, 8, 0},
 {"Prefs", 0,  0, 0, 0, 0, 0, 8, 0},
 {"Notepad", 0,  cb_notepad, 0, 0, 0, 0, 8, 0},
 {0},
 {0}
};

#endif
