
#ifndef __proteusmenu_h__
#define __proteusmenu_h__

int font_size = 12;

static Fl_Menu_Item menuitems[] = 
{
 {"File", 0,  0, NULL, 64, 0, 0, font_size, 0},
   {"new", 0,  new_cb, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"load", 0,  cb_notepad, (void*)NULL, 0, 0, 0, font_size, 0},
   {"TODO save", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"TODO save as", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"TODO about", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"quit", 0,  quit_cb, (void*)NULL, 0, 0, 0, font_size, 0},
   {0},
 {"Edit", 0,  0, NULL, 64, 0, 0, font_size, 0},
   {"TODO cut", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"TODO copy", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"TODO paste", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {0},
 {"Notepad", 0,  0, NULL, 64, 0, 0, font_size, 0},
   {"TODO edit code", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"insert", 0,  0, NULL, 64, 0, 0, font_size, 0},
     {"TODO section title", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
     {"TODO flat text", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
     {"TODO 2d graph", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
     {"TODO link to other notepad", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
     {"TODO link command", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
     {0},
   {"TODO edit", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"TODO delete", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {0},
 {"Help", 0,  0, NULL, 64, 0, 0, font_size, 0},
   {"introduction", 0,  help_intro_cb, (void*)NULL, 0, 0, 0, font_size, 0},
   {"TODO tutorial", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"TODO find function", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {"detailed help on function", 0,  help_detailed_function_cb, (void*)NULL, 0, 0, 0, font_size, 0},
   {"TODO programmers reference", 0,  cb_menu_insert, (void*)"TODO", 0, 0, 0, font_size, 0},
   {0},
 {0}
};

/*TODO remove?
static Fl_Menu_Item menuitems[] = 
{
 {"Func", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Complex", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Complex", 0,  cb_menu_insert, (void*)"Complex(", 0, 0, 0, font_size, 0},
 {"Re", 0,  cb_menu_insert, (void*)"Re(", 0, 0, 0, font_size, 0},
 {"Im", 0,  cb_menu_insert, (void*)"Im(", 0, 0, 0, font_size, 0},
 {"I", 0,  cb_menu_insert, (void*)"I", 0, 0, 0, font_size, 0},
 {0},
 {"Stat", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Sum", 0,  cb_menu_insert, (void*)"Sum(", 0, 0, 0, font_size, 0},
 {"Min", 0, cb_menu_insert, (void*)"Min(", 0, 0, 0, font_size, 0},
 {"Max", 0, cb_menu_insert, (void*)"Max(", 0, 0, 0, font_size, 0},
 {"Bin", 0,  cb_menu_insert, (void*)"Bin(", 0, 0, 0, font_size, 0},
 {"Average", 0, cb_menu_insert, (void*)"Average(", 0, 0, 0, font_size, 0},
 {"!", 0,  cb_menu_insert, (void*)"!", 0, 0, 0, font_size, 0},
 {0},
 {"Trig", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"TruncRadian", 0, cb_menu_insert, (void*)"TruncRadian(", 0, 0, 0, font_size, 0},
 {"Tan", 0,  cb_menu_insert, (void*)"Tan(", 0, 0, 0, font_size, 0},
 {"Sin", 0,  cb_menu_insert, (void*)"Sin(", 0, 0, 0, font_size, 0},
 {"Cos", 0,  cb_menu_insert, (void*)"Cos(", 0, 0, 0, font_size, 0},
 {"ArcTan", 0, cb_menu_insert, (void*)"ArcTan(", 0, 0, 0, font_size, 0},
 {"ArcSin", 0, cb_menu_insert, (void*)"ArcSin(", 0, 0, 0, font_size, 0},
 {"ArcCos", 0, cb_menu_insert, (void*)"ArcCos(", 0, 0, 0, font_size, 0},
 {0},
 {"Calc", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Taylor", 0,  cb_menu_insert, (void*)"Taylor(", 0, 0, 0, font_size, 0},
 {"Simplify", 0, cb_menu_insert, (void*)"Simplify(", 0, 0, 0, font_size, 0},
 {"ReversePoly", 0,  cb_menu_insert, (void*)"ReversePoly(", 0, 0, 0, font_size, 0},
 {"Newton", 0, cb_menu_insert, (void*)"Newton(", 0, 0, 0, font_size, 0},
 {"InverseTaylor", 0,  cb_menu_insert, (void*)"InverseTaylor(", 0, 0, 0, font_size, 0},
 {"Integrate", 0, cb_menu_insert, (void*)"Integrate(", 0, 0, 0, font_size, 0},
 {"Expand", 0, cb_menu_insert, (void*)"Expand(", 0, 0, 0, font_size, 0},
 {"Diverge", 0, cb_menu_insert, (void*)"Diverge(", 0, 0, 0, font_size, 0},
 {"D", 0, cb_menu_insert, (void*)"D(", 0, 0, 0, font_size, 0},
 {"Curl", 0, cb_menu_insert, (void*)"Curl(", 0, 0, 0, font_size, 0},
 {"AntiDeriv", 0, cb_menu_insert, (void*)"AntiDeriv(", 0, 0, 0, font_size, 0},
 {0},
 {"Poly", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"PSolve", 0,  cb_menu_insert, (void*)"PSolve(", 0, 0, 0, font_size, 0},
 {"PrimitivePart", 0,  cb_menu_insert, (void*)"PrimitivePart(", 0, 0, 0, font_size, 0},
 {"RandomPoly", 0,  cb_menu_insert, (void*)"RandomPoly(", 0, 0, 0, font_size, 0},
 {"Monic", 0,  cb_menu_insert, (void*)"Monic(", 0, 0, 0, font_size, 0},
 {"Mod", 0,  cb_menu_insert, (void*)"Mod(", 0, 0, 0, font_size, 0},
 {"LeadingCoef", 0,  cb_menu_insert, (void*)"LeadingCoef(", 0, 0, 0, font_size, 0},
 {"Expand", 0, cb_menu_insert, (void*)"Expand(", 0, 0, 0, font_size, 0},
 {"Div", 0,  cb_menu_insert, (void*)"Div(", 0, 0, 0, font_size, 0},
 {"Degree", 0,  cb_menu_insert, (void*)"Degree(", 0, 0, 0, font_size, 0},
 {"Content", 0,  cb_menu_insert, (void*)"Content(", 0, 0, 0, font_size, 0},
 {"Coef", 0,  cb_menu_insert, (void*)"Coef(", 0, 0, 0, font_size, 0},
 {"BigOh", 0,  cb_menu_insert, (void*)"BigOh(", 0, 0, 0, font_size, 0},
 {0},
 {"Lin Alg", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"ZeroVector", 0, cb_menu_insert, (void*)"ZeroVector(", 0, 0, 0, font_size, 0},
 {"ZeroMatrix", 0, cb_menu_insert, (void*)"ZeroMatrix(", 0, 0, 0, font_size, 0},
 {"Transpose", 0, cb_menu_insert, (void*)"Transpose(", 0, 0, 0, font_size, 0},
 {"Trace", 0, cb_menu_insert, (void*)"Trace(", 0, 0, 0, font_size, 0},
 {"SolveMatrix", 0, cb_menu_insert, (void*)"SolveMatrix(", 0, 0, 0, font_size, 0},
 {"Permutations", 0,  cb_menu_insert, (void*)"Permutations(", 0, 0, 0, font_size, 0},
 {"Normalize", 0, cb_menu_insert, (void*)"Normalize(", 0, 0, 0, font_size, 0},
 {"Minor", 0, cb_menu_insert, (void*)"Minor(", 0, 0, 0, font_size, 0},
 {"LeviCivita", 0,  cb_menu_insert, (void*)"LeviCivita(", 0, 0, 0, font_size, 0},
 {"IsUnitary", 0, cb_menu_insert, (void*)"IsUnitary(", 0, 0, 0, font_size, 0},
 {"IsMatrix", 0, cb_menu_insert, (void*)"IsMatrix(", 0, 0, 0, font_size, 0},
 {"IsHermitian", 0, cb_menu_insert, (void*)"IsHermitian(", 0, 0, 0, font_size, 0},
 {"Inverse", 0, cb_menu_insert, (void*)"Inverse(", 0, 0, 0, font_size, 0},
 {"InProduct", 0,  cb_menu_insert, (void*)"InProduct(", 0, 0, 0, font_size, 0},
 {"Identity", 0, cb_menu_insert, (void*)"Identity(", 0, 0, 0, font_size, 0},
 {"EigenVectors", 0, cb_menu_insert, (void*)"EigenVectors(", 0, 0, 0, font_size, 0},
 {"EigenValues", 0, cb_menu_insert, (void*)"EigenValues(", 0, 0, 0, font_size, 0},
 {"DiagonalMatrix", 0, cb_menu_insert, (void*)"DiagonalMatrix(", 0, 0, 0, font_size, 0},
 {"Determinant", 0, cb_menu_insert, (void*)"Determinant(", 0, 0, 0, font_size, 0},
 {"CrossProduct", 0, cb_menu_insert, (void*)"CrossProduct(", 0, 0, 0, font_size, 0},
 {"BaseVector", 0, cb_menu_insert, (void*)"BaseVector(", 0, 0, 0, font_size, 0},
 {"CoFactor", 0, cb_menu_insert, (void*)"CoFactor(", 0, 0, 0, font_size, 0},
 {"CharacteristicEquation", 0, cb_menu_insert, (void*)"CharacteristicEquation(", 0, 0, 0, font_size, 0},
 {0},
 {"Arith", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"ToBase", 0,  cb_menu_insert, (void*)"ToBase(", 0, 0, 0, font_size, 0},
 {"Sqrt", 0,  cb_menu_insert, (void*)"Sqrt(", 0, 0, 0, font_size, 0},
 {"Sign", 0,  cb_menu_insert, (void*)"Sign(", 0, 0, 0, font_size, 0},
 {"Precision", 0,  cb_menu_insert, (void*)"Precision(", 0, 0, 0, font_size, 0},
 {"Round", 0,  cb_menu_insert, (void*)"Round(", 0, 0, 0, font_size, 0},
 {"Rationalize", 0,  cb_menu_insert, (void*)"Rationalize(", 0, 0, 0, font_size, 0},
 {"Numer", 0,  cb_menu_insert, (void*)"Numer(", 0, 0, 0, font_size, 0},
 {"N", 0,  cb_menu_insert, (void*)"N(", 0, 0, 0, font_size, 0},
 {"Mod", 0,  cb_menu_insert, (void*)"Mod(", 0, 0, 0, font_size, 0},
 {"Ln", 0,  cb_menu_insert, (void*)"Ln(", 0, 0, 0, font_size, 0},
 {"Lcm", 0,  cb_menu_insert, (void*)"Lcm(", 0, 0, 0, font_size, 0},
 {"IsZero", 0,  cb_menu_insert, (void*)"IsZero(", 0, 0, 0, font_size, 0},
 {"IsRational", 0,  cb_menu_insert, (void*)"IsRational(", 0, 0, 0, font_size, 0},
 {"GetPrecision", 0,  cb_menu_insert, (void*)"GetPrecision(", 0, 0, 0, font_size, 0},
 {"Gcd", 0,  cb_menu_insert, (void*)"Gcd(", 0, 0, 0, font_size, 0},
 {"FromBase", 0,  cb_menu_insert, (void*)"FromBase(", 0, 0, 0, font_size, 0},
 {"Floor", 0,  cb_menu_insert, (void*)"Floor(", 0, 0, 0, font_size, 0},
 {"Factors", 0,  cb_menu_insert, (void*)"Factors(", 0, 0, 0, font_size, 0},
 {"Factorize", 0,  cb_menu_insert, (void*)"Factorize(", 0, 0, 0, font_size, 0},
 {"Factor", 0,  cb_menu_insert, (void*)"Factor(", 0, 0, 0, font_size, 0},
 {"Exp", 0,  cb_menu_insert, (void*)"Exp(", 0, 0, 0, font_size, 0},
 {"Div", 0,  cb_menu_insert, (void*)"Div(", 0, 0, 0, font_size, 0},
 {"Denom", 0,  cb_menu_insert, (void*)"Denom(", 0, 0, 0, font_size, 0},
 {"Commutator", 0,  cb_menu_insert, (void*)"Commutator(", 0, 0, 0, font_size, 0},
 {"Ceil", 0,  cb_menu_insert, (void*)"Ceil(", 0, 0, 0, font_size, 0},
 {"Abs", 0,  cb_menu_insert, (void*)"Abs(", 0, 0, 0, font_size, 0},
 {0},
 {0},
 {"Prog", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Functional", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {":", 0,  cb_menu_insert, (void*)":", 0, 0, 0, font_size, 0},
 {"@", 0,  cb_menu_insert, (void*)"@", 0, 0, 0, font_size, 0},
 {"/@", 0,  cb_menu_insert, (void*)"/@", 0, 0, 0, font_size, 0},
 {"..", 0,  cb_menu_insert, (void*)"..", 0, 0, 0, font_size, 0},
 {0},
 {"I/O", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"FullForm", 0,  cb_menu_insert, (void*)"FullForm(", 0, 0, 0, font_size, 0},
 {"Echo", 0,  cb_menu_insert, (void*)"Echo(", 0, 0, 0, font_size, 0},
 {"PrettyForm", 0,  cb_menu_insert, (void*)"PrettyForm(", 0, 0, 0, font_size, 0},
 {"Write", 0,  cb_menu_insert, (void*)"Write(", 0, 0, 0, font_size, 0},
 {"WriteString", 0,  cb_menu_insert, (void*)"WriteString(", 0, 0, 0, font_size, 0},
 {"Space", 0,  cb_menu_insert, (void*)"Space(", 0, 0, 0, font_size, 0},
 {"NewLine", 0,  cb_menu_insert, (void*)"NewLine(", 0, 0, 0, font_size, 0},
 {"FromFile", 0,  cb_menu_insert, (void*)"FromFile(", 0, 0, 0, font_size, 0},
 {"FromString", 0,  cb_menu_insert, (void*)"FromString(", 0, 0, 0, font_size, 0},
 {"ToString()", 0,  cb_menu_insert, (void*)"ToString()", 0, 0, 0, font_size, 0},
 {"Read()", 0,  cb_menu_insert, (void*)"Read()", 0, 0, 0, font_size, 0},
 {"LispRead()", 0,  cb_menu_insert, (void*)"LispRead()", 0, 0, 0, font_size, 0},
 {"ReadToken()", 0,  cb_menu_insert, (void*)"ReadToken()", 0, 0, 0, font_size, 0},
 {"ToFile", 0,  cb_menu_insert, (void*)"ToFile(", 0, 0, 0, font_size, 0},
 {"Load", 0,  cb_menu_insert, (void*)"Load(", 0, 0, 0, font_size, 0},
 {"Use", 0,  cb_menu_insert, (void*)"Use(", 0, 0, 0, font_size, 0},
 {"DefLoad", 0,  cb_menu_insert, (void*)"DefLoad(", 0, 0, 0, font_size, 0},
 {"FindFile", 0,  cb_menu_insert, (void*)"FindFile(", 0, 0, 0, font_size, 0},
 {"PatchLoad", 0,  cb_menu_insert, (void*)"PatchLoad(", 0, 0, 0, font_size, 0},
 {0},
 {"Contol", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"MaxEvalDepth", 0,  cb_menu_insert, (void*)"MaxEvalDepth(", 0, 0, 0, font_size, 0},
 {"Hold", 0,  cb_menu_insert, (void*)"Hold(", 0, 0, 0, font_size, 0},
 {"Eval", 0,  cb_menu_insert, (void*)"Eval(", 0, 0, 0, font_size, 0},
 {"While", 0,  cb_menu_insert, (void*)"While(", 0, 0, 0, font_size, 0},
 {"Until", 0,  cb_menu_insert, (void*)"Until(", 0, 0, 0, font_size, 0},
 {"If", 0,  cb_menu_insert, (void*)"If(", 0, 0, 0, font_size, 0},
 {"SystemCall", 0,  cb_menu_insert, (void*)"SystemCall(", 0, 0, 0, font_size, 0},
 {"PatchString", 0,  cb_menu_insert, (void*)"PatchString(", 0, 0, 0, font_size, 0},
 {"Function", 0,  cb_menu_insert, (void*)"Function(", 0, 0, 0, font_size, 0},
 {"Use", 0,  cb_menu_insert, (void*)"Use(", 0, 0, 0, font_size, 0},
 {"For", 0,  cb_menu_insert, (void*)"For(", 0, 0, 0, font_size, 0},
 {"ForEach", 0,  cb_menu_insert, (void*)"ForEach(", 0, 0, 0, font_size, 0},
 {"Apply", 0,  cb_menu_insert, (void*)"Apply(", 0, 0, 0, font_size, 0},
 {"LocalSymbols", 0,  cb_menu_insert, (void*)"LocalSymbols(", 0, 0, 0, font_size, 0},
 {"Subst", 0,  cb_menu_insert, (void*)"Subst(", 0, 0, 0, font_size, 0},
 {"WithValue", 0,  cb_menu_insert, (void*)"WithValue(", 0, 0, 0, font_size, 0},
 {"TraceStack", 0,  cb_menu_insert, (void*)"TraceStack(", 0, 0, 0, font_size, 0},
 {"TraceExp", 0,  cb_menu_insert, (void*)"TraceExp(", 0, 0, 0, font_size, 0},
 {"TraceRule", 0,  cb_menu_insert, (void*)"TraceRule(", 0, 0, 0, font_size, 0},
 {0},
 {"Predicates", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"IsFreeOf", 0,  cb_menu_insert, (void*)"IsFreeOf(", 0, 0, 0, font_size, 0},
 {"IsZeroVector", 0,  cb_menu_insert, (void*)"IsZeroVector(", 0, 0, 0, font_size, 0},
 {"IsNonObject", 0,  cb_menu_insert, (void*)"InNonObject(", 0, 0, 0, font_size, 0},
 {"IsEven", 0,  cb_menu_insert, (void*)"IsEven(", 0, 0, 0, font_size, 0},
 {"IsOdd", 0,  cb_menu_insert, (void*)"IsOdd(", 0, 0, 0, font_size, 0},
 {"IsFunction", 0,  cb_menu_insert, (void*)"IsFunction(", 0, 0, 0, font_size, 0},
 {"IsAtom", 0,  cb_menu_insert, (void*)"IsAtom(", 0, 0, 0, font_size, 0},
 {"IsString", 0,  cb_menu_insert, (void*)"IsString(", 0, 0, 0, font_size, 0},
 {"IsNumber", 0,  cb_menu_insert, (void*)"IsNumber(", 0, 0, 0, font_size, 0},
 {"IsInteger", 0,  cb_menu_insert, (void*)"IsInteger(", 0, 0, 0, font_size, 0},
 {"IsList", 0,  cb_menu_insert, (void*)"IsList(", 0, 0, 0, font_size, 0},
 {"IsBound", 0,  cb_menu_insert, (void*)"IsBound(", 0, 0, 0, font_size, 0},
 {"IsBoolean", 0,  cb_menu_insert, (void*)"IsBoolean(", 0, 0, 0, font_size, 0},
 {"IsNegativeNumber", 0,  cb_menu_insert, (void*)"IsNegativeNumber(", 0, 0, 0, font_size, 0},
 {"IsNegativeInteger", 0,  cb_menu_insert, (void*)"IsNegativeInteger(", 0, 0, 0, font_size, 0},
 {"IsPosivitveNumber", 0,  cb_menu_insert, (void*)"IsPositiveNumber(", 0, 0, 0, font_size, 0},
 {"IsNotZero", 0,  cb_menu_insert, (void*)"IsNotZero(", 0, 0, 0, font_size, 0},
 {"IsNonZeroInteger", 0,  cb_menu_insert, (void*)"IsNonZeroInteger(", 0, 0, 0, font_size, 0},
 {"IsInfinity", 0,  cb_menu_insert, (void*)"IsInfinity(", 0, 0, 0, font_size, 0},
 {"IsConstant", 0,  cb_menu_insert, (void*)"IsConstant(", 0, 0, 0, font_size, 0},
 {"Not", 0,  cb_menu_insert, (void*)"Not", 0, 0, 0, font_size, 0},
 {"And", 0,  cb_menu_insert, (void*)"And", 0, 0, 0, font_size, 0},
 {"Or", 0,  cb_menu_insert, (void*)"Or", 0, 0, 0, font_size, 0},
 {"<", 0,  cb_menu_insert, (void*)"<", 0, 0, 0, font_size, 0},
 {">", 0,  cb_menu_insert, (void*)">", 0, 0, 0, font_size, 0},
 {"<=", 0,  cb_menu_insert, (void*)"<=", 0, 0, 0, font_size, 0},
 {">=", 0,  cb_menu_insert, (void*)">=", 0, 0, 0, font_size, 0},
 {"!=", 0,  cb_menu_insert, (void*)"!=", 0, 0, 0, font_size, 0},
 {"=", 0,  cb_menu_insert, (void*)"=", 0, 0, 0, font_size, 0},
 {0},
 {"List", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Head", 0,  cb_menu_insert, (void*)"Head(", 0, 0, 0, font_size, 0},
 {"Tail", 0,  cb_menu_insert, (void*)"Tail(", 0, 0, 0, font_size, 0},
 {"Length", 0,  cb_menu_insert, (void*)"Length(", 0, 0, 0, font_size, 0},
 {"Nth", 0,  cb_menu_insert, (void*)"Nth(", 0, 0, 0, font_size, 0},
 {"Concat", 0,  cb_menu_insert, (void*)"Concat(", 0, 0, 0, font_size, 0},
 {"Delete", 0,  cb_menu_insert, (void*)"Delete(", 0, 0, 0, font_size, 0},
 {"Insert", 0,  cb_menu_insert, (void*)"Insert(", 0, 0, 0, font_size, 0},
 {"Replace", 0,  cb_menu_insert, (void*)"Replace(", 0, 0, 0, font_size, 0},
 {"FlatCopy", 0,  cb_menu_insert, (void*)"FlatCopy(", 0, 0, 0, font_size, 0},
 {0},
 {0},
 {"Links", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Plot", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Load(\"flplot\")", 0,  cb_menu_insert, (void*)"Load(\"flplot\")", 0, 0, 0, font_size, 0},
 {"FlPlot", 0,  cb_menu_insert, (void*)"FlPlot(", 0, 0, 0, font_size, 0},
 {0},
 {"Braces", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"(", 0,  cb_menu_insert, (void*)"(", 0, 0, 0, font_size, 0},
 {")", 0,  cb_menu_insert, (void*)")", 0, 0, 0, font_size, 0},
 {"{", 0,  cb_menu_insert, (void*)"{", 0, 0, 0, font_size, 0},
 {"}", 0,  cb_menu_insert, (void*)"}", 0, 0, 0, font_size, 0},
 {"[", 0,  cb_menu_insert, (void*)"[", 0, 0, 0, font_size, 0},
 {"]", 0,  cb_menu_insert, (void*)"]", 0, 0, 0, font_size, 0},
 {0},
 {"Constants", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"EndOfFile", 0,  cb_menu_insert, (void*)"EndOfFile", 0, 0, 0, font_size, 0},
 {"Infinty", 0,  cb_menu_insert, (void*)"Infinity", 0, 0, 0, font_size, 0},
 {"False", 0,  cb_menu_insert, (void*)"False", 0, 0, 0, font_size, 0},
 {"True", 0,  cb_menu_insert, (void*)"True", 0, 0, 0, font_size, 0},
 {"Pi", 0,  cb_menu_insert, (void*)"Pi", 0, 0, 0, font_size, 0},
 {"%", 0,  cb_menu_insert, (void*)"%", 0, 0, 0, font_size, 0},
 {0},
 {"Vars", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Local", 0,  cb_menu_insert, (void*)"Local(", 0, 0, 0, font_size, 0},
 {"Clear", 0,  cb_menu_insert, (void*)"Clear(", 0, 0, 0, font_size, 0},
 {"Set", 0,  cb_menu_insert, (void*)"Set(", 0, 0, 0, font_size, 0},
 {"--", 0,  cb_menu_insert, (void*)"--", 0, 0, 0, font_size, 0},
 {"++", 0,  cb_menu_insert, (void*)"++", 0, 0, 0, font_size, 0},
 {":=", 0,  cb_menu_insert, (void*)":=", 0, 0, 0, font_size, 0},
 {"j", 0,  cb_menu_insert, (void*)"j", 0, 0, 0, font_size, 0},
 {"i", 0,  cb_menu_insert, (void*)"i", 0, 0, 0, font_size, 0},
 {"b", 0,  cb_menu_insert, (void*)"b", 0, 0, 0, font_size, 0},
 {"a", 0,  cb_menu_insert, (void*)"a", 0, 0, 0, font_size, 0},
 {"y", 0,  cb_menu_insert, (void*)"y", 0, 0, 0, font_size, 0},
 {0},
 {0},
 {"Last", 0,  0, NULL, 64, 0, 0, font_size, 0},
 {"Prefs", 0,  0, NULL, 0, 0, 0, font_size, 0},
 {"Notepad", 0,  cb_notepad, NULL, 0, 0, 0, font_size, 0},
 {0},
 {0}
};
*/

#endif
