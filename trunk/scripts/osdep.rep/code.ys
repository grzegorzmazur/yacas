// OS-dependent code (to be replaced or configured at build time)

// this file should load the OS-specific module that handles MakeDir() etc.


/** The variable PlatformOS determines which module we should load.
It can be set in yacasinit.ys or here, to override PlatformOS(), e.g.:
PlatformOS:="Win32";
scripts should not use PlatformOS(), instead they should use
the global constant PlatformOS, because it might have been set differently by the user's yacasinit (in the standard library, both values are the same.)

Currently the variable PlatformOS is assigned to PlatformOS() in yacasinit.

*/

// it seems that we need this here because otherwise we won't be able to load the module... or will we?
FilePathSeparator := If(PlatformOS="Win32", "\\", "/");

// definitions of variable-argument functions

Function() MakeFilePath(file, ...);
Function() MakeDir(dir, ...);
Function() DeleteDir(dir, ...);
Function() DeleteFile(file, ...);

CopyFile(file1, file2) := SystemCall(CopyFileCmd(file1, file2));

10 # MakeFilePath(file_IsString) <-- file;
10 # MakeFilePath({file_IsString}) <-- file;
20 # MakeFilePath(files_IsList) <-- ConcatStrings(files[1], FilePathSeparator, MakeFilePath(Tail(files)));

10 # MakeDir(dir_IsString) <-- SystemCall(MakeDirCmd(dir));
10 # MakeDir({dir_IsString}) <-- MakeDir(dir);
20 # MakeDir(dirs_IsList) <-- MakeDir(Head(dirs)) And MakeDir(Tail(dirs));

10 # DeleteDir(dir_IsString) <-- SystemCall(DeleteDirCmd(dir));
10 # DeleteDir({dir_IsString}) <-- DeleteDir(dir);
20 # DeleteDir(dirs_IsList) <-- DeleteDir(Head(dirs)) And DeleteDir(Tail(dirs));

10 # DeleteFile(file_IsString) <-- SystemCall(DeleteFileCmd(file));
10 # DeleteFile({file_IsString}) <-- DeleteFile(file);
20 # DeleteFile(files_IsList) <-- DeleteFile(Head(files)) And DeleteFile(Tail(files));

SystemCallBg(command) := SystemCall(BackgroundCmd(command));

// convert a path in current OS convention to use separators of the given another OS
// 10 # ConvertOSPath(path_IsString, OSname_IsString) _ (FilePathSeparators[OSname]=Empty) <-- path;
20 # ConvertOSPath(path_IsString, OSname_IsString) <--
[
	Local(i);
	For(i:=1, i<=Length(path), i++)
	[
		If(
			StringMid(i, 1, path) = FilePathSeparator,
			path:=SetStringMid(i, If(OSname="Win32", "\\", "/"), path)
		);
	];
	path;
		
];

// this function should be called once when one of the OS-dependent functions is requested
LoadOSDependentModule() := Use(
  ConcatStrings(
	"osdep.rep/",
// use this file path separator because it works on Windows and on Unix, and for other platforms we can use the archive
	If(PlatformOS="Win32", "win32.ys", "unix.ys") // Unix defaults will probably work on MacOSX and BeOS
  )
);


LoadOSDependentModule();
