

Testing("LeviCivita");
Verify(LeviCivita({1,2,3}),1);
Verify(LeviCivita({2,1,3}),-1);
Verify(LeviCivita({1,1,3}),0);

Testing("VectorProducts");
[
  Local(l,m,n);
  l:={1,0,0};
  m:={0,1,0};
  n:={0,0,1};

  Verify(l X m, {0,0,1});
  Verify(m X n, {1,0,0});
  Verify(n X l, {0,1,0});
  Verify(l X n, {0,-1,0});

  Verify(l . m, 0);
  Verify(m . n, 0);
  Verify(n . l, 0);

  Verify(l . l, 1);
];


[
  Local(a,b);

/* Strangeness: change variable below into a, and the crossproducts
 * later on fail!
 */
  a:={1,2,3};
  b:={3,1,5};
  Verify( a . b , 20);
  Verify(CrossProduct({1,2,3} , {4,2,5}) , {4,7,-6});
];
Verify(aa,Hold(aa));

[
  Local(a,b);
  NextTest("Inproduct");
  a:={1,2,3};
  b:={3,1,5};
  Verify( a . b , 20);
];

Verify(CrossProduct({1,2,3} , {4,2,5}) , {4,7,-6});
Verify({1,2,3} X {4,2,5},{4,7,-6});
Clear(a,b);

NextTest("Identity matrices");
Verify(Identity(4),
   { {1,  0,  0,  0} ,
     {0,  1,  0,  0} ,
     {0,  0,  1,  0} ,
     {0,  0,  0,  1} });


NextTest("Check linear algebra");
/* Normalize */
Testing("Normalize");
Verify(Normalize({3,4}),{3/5,4/5});
/* DiagonalMatrix */
Testing("DiagonalMatrix");
Verify(DiagonalMatrix({2,3,4}),{{2,0,0},{0,3,0},{0,0,4}});
/* ZeroMatrix */
Testing("ZeroMatrix");
Verify(ZeroMatrix(2,3),{{0,0,0},{0,0,0}});
/* Transpose */
Testing("Transpose");
Verify(Transpose({{a,b},{c,d}}),{{a,c},{b,d}});
/* Determinant */
Testing("Determinant");
Verify(Determinant({{2,3},{3,1}}),-7);
Verity( Determinant(ToeplitzMatrix(1 .. 10)), -2816 );
// check that Determinant gives correct symbolic result
TestYacas(Determinant({{a,b},{c,d}}),a*d-b*c);

[
  Local(ll);
  ll:={ {1,2,3},
        {2,-1,4},
        {3,4,3}
      };
  /* CoFactor */
  Testing("CoFactor");
  Verify(N(CoFactor(ll,1,2)),6);
  /* Minor */
  Testing("Minor");
  Verify(N(Minor(ll,1,2)),-6);
  /* Inverse */
  Testing("Inverse");
  Verify(Inverse(ll)*ll,Identity(3));
  /* SolveMatrix */
  Testing("SolveMatrix");
  Verify(ll*SolveMatrix(ll,{1,2,3}),{1,2,3});
  /* Trace */
  Testing("Trace");
  Verify(Trace(ll),1-1+3);
  /* IsVector */
  Verify(IsList(ll),True);
  Verify(IsList({1,2,3}),True);
  /* IsMatrix */
  Verify(IsMatrix(ll),True);
  Clear(ll);
];

[
  Local(A);
  Verify( IsSymmetric(Identity(10)), True ); 
  Verify( IsOrthogonal(2*Identity(10)), False );
  A := {{1,2,2},{2,1,-2},{-2,2,-1}};
  Verify( IsOrthogonal(A/3), True );
  Verity( IsSymmetric(Identity(10)), True );
  Verify( IsSymmetric({{1}}),True );
  A := {{1,0,0,0,1},{0,2,0,0,0},{0,0,3,0,0},{0,0,0,4,0},{1,0,0,0,5}};
  Verify( IsSymmetric(A),True );
  A := {{0,2,0,0,1},{0,0,3,0,0},{0,0,0,4,0},{1,0,0,0,5}};
  Verify( IsSymmetric(A),False);
  A := {{0,-1},{1,0}};
  Verify( IsSkewSymmetric(A), True );
  Verify( IsSkewSymmetric(Identity(10)), False );
  Verify( IsSkewSymmetric(ZeroMatrix(10,10)), True );
  Verify( IsIdempotent(Identity(20)), True );
  Verify( IsIdempotent(ZeroMatrix(10,10)), True );
];

Verify( VandermondeMatrix({1,2,3,4}),{{1,1,1,1},{1,2,3,4},{1,4,9,16},{1,8,27,64}});

Verify( JacobianMatrix( {x^4*y,Cos(y)}, { x, y}), {{4*x^3*y,x^4},{0,-Sin(y)}} );

Verify( WronskianMatrix( {Sin(x),Cos(x)}, x) , {{Sin(x),Cos(x)},{Cos(x),-Sin(x)}} );

Verify( Determinant(HilbertMatrix(5)), 1/266716800000 );

Verify( HilbertMatrix(6)*HilbertInverseMatrix(6), Identity(6) );

Verify( FrobeniusNorm({{1,2},{3,4}}), Sqrt(30) );

Verify( Norm({1,2,3}), Sqrt(14) );

Verify( OrthogonalBasis({{1,1,0},{2,0,1},{2,2,1}}) , {{1,1,0},{1,-1,1},{-1/3,1/3,2/3}} );
Verify( OrthogonalBasis({{1,0,1,0},{1,1,1,0},{0,1,0,1}}), {{1,0,1,0},{0,1,0,0},{0,0,0,1}} );
Verify( OrthonormalBasis({{1,0,1,0},{1,1,1,0},{0,1,0,1}}), 
	{{Sqrt(1/2),0,Sqrt(1/2),0},{0,1,0,0},{0,0,0,1}} );
Verify( OrthonormalBasis({{1,1,1},{0,1,1},{0,0,1}}),
	{{Sqrt(1/3),Sqrt(1/3),Sqrt(1/3)},
	{-Sqrt(2/3),Sqrt(1/6),Sqrt(1/6)},
	{0,-Sqrt(1/2),Sqrt(1/2)}} );

[
  Local(A,b);
  A:={{1,2,4},{1,3,9},{1,4,16}};
  b:={2,4,7};
  Verify( MatrixSolve(A,b) , {1,(-1)/2,1/2} );
  A:={{2,4,-2,-2},{1,2,4,-3},{-3,-3,8,-2},{-1,1,6,-3}};
  b:={-4,5,7,7};
  Verify( MatrixSolve(A,b), {1,2,3,4} );
];

[
  Local(A,R);
  A:={{4,-2,4,2},{-2,10,-2,-7},{4,-2,8,4},{2,-7,4,7}};
  R:=Cholesky(A);
  Verify( R, {{2,-1,2,1},{0,3,0,-2},{0,0,2,1},{0,0,0,1}} );
  Verify( A, Transpose(R)*R );
];

[
  Local(A,L,U);
  A:={{2,1,1},{2,2,-1},{4,-1,6}};
  {L,U} := LU(A);
  Verify( L*U, A );
];
