
Use("cstubgen.rep/code.ys");

/* Start generating a c stub file */
StubApiCStart();

StubApiCRemark("This plugin links to the Gnu Scientific Library.");

/* define an include file for the stub file */
StubApiCInclude("\"yacas_gsl.h\"");

StubApiCPrelog(
"
#ifdef HAVE_CONFIG_H
#include \"config.h\"
#endif
#ifdef HAVE_LIBGSL
#include \"gsl/gsl_sf.h\"
");


/* Declare a function */
StubApiCFunction("double", "gsl_sf_bessel_J0","gsl'sf'bessel'J0",{"double"});
StubApiCFunction("double", "gsl_sf_erf","gsl'sf'erf",{"double"});

/*
StubApiCFunction("int","add_integers","AddTwoIntegers",{"int","int"});
StubApiCFunction("double","add_doubles","AddTwoDoubles",
    { {"double","x"},{"double","y"}});
*/

/* Declaring the structure Bla, along with some functions working on it. */
/*
StubApiCStruct("Bla*" ,"Bla_free");
StubApiCFunction("Bla*","CreateBla",{"int","int"});
StubApiCFunction("void","BlaSetA",{"Bla*","int"});
StubApiCFunction("int","BlaGetA",{"Bla*"});
*/

StubApiCPostlog(
"
#else
extern \"C\" {
LispPluginBase* maker(void)
{
    return NULL;
}
};
#endif //HAVE_LIBGSL
");


/* export the c file for compilation */
StubApiCFile("yacas_gslapi");

