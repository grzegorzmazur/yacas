# Makefile.in generated automatically by automake 1.4a from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_FLAG =
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
CC = @CC@
CPP = @CPP@
CXX = @CXX@
MAKEINFO = @MAKEINFO@
NUMBERS_LDFLAGS = @NUMBERS_LDFLAGS@
NUMBERS_LIB = @NUMBERS_LIB@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
RELEASE = @RELEASE@
VERSION = @VERSION@
scriptdir = @scriptdir@

DEFS = @DEFS@ -DSCRIPT_DIR=\"$(scriptdir)\"
INCLUDES = -I$(top_builddir) -I$(srcdir)/plat/linux32 -I../..

bin_PROGRAMS = yacas
noinst_PROGRAMS = testnum
noinst_LIBRARIES = libyacas.a @NUMBERS_LIB@
EXTRA_LIBRARIES = libgmpnumbers.a libyacasnumbers.a libyacasplatform.a

noinst_HEADERS = anumber.h choices.h deffile.h grower.h 	infixparser.h lispassert.h lispatom.h lispcleanupstack.h 	lispenvironment.h lisperror.h lispeval.h lispevalhash.h 	lispglobals.h lisphash.h lispio.h lispobject.h lispparser.h 	lispstring.h lispuserfunc.h mathcommands.h mathenvironment.h patcher.h 	mathuserfunc.h numbers.h platmath.h standard.h patterns.h errors.h arggetter.h 	stdfileio.h stringio.h stubs.h tokenizer.h yacas.h ramdisk.h refcount.h 	genericobject.h arrayclass.h evalfunc.h commandline.h unixcommandline.h         patternclass.h log.h substitute.h stdcommandline.h arrayclass.inl mathutil.h         lispplugin.h genericstructs.h ctokenizer.h yacasprivate.h yacasbase.h xmltokenizer.h

yacas_SOURCES = yacasmain.cpp commandline.cpp unixcommandline.cpp stdcommandline.cpp
yacas_LDADD = libyacas.a libyacasplatform.a @NUMBERS_LIB@ @NUMBERS_LDFLAGS@ 

#
# some one who understands autoconf/automake: how do I detect if a platform
# supports elf binaries?
#

yacas_LDFLAGS = $(LIBS)

testnum_SOURCES = anumber.cpp grower.cpp lispstring.cpp stdstubs.cpp obmalloc.cpp 	testnum.cpp mathutil.cpp

libyacas_a_SOURCES = deffile.cpp infixparser.cpp lispatom.cpp 	lispcleanupstack.cpp lispenvironment.cpp lispeval.cpp 	lispio.cpp lispobject.cpp lispparser.cpp  	lispuserfunc.cpp mathcommands.cpp mathenvironment.cpp 	mathuserfunc.cpp standard.cpp  stdfileio.cpp arggetter.cpp 	stringio.cpp tokenizer.cpp yacasapi.cpp genericobject.cpp 	arrayclass.cpp lispevalhash.cpp patterns.cpp patternclass.cpp         substitute.cpp mathcommands2.cpp mathcommands3.cpp errors.cpp patcher.cpp         lispplugin.cpp elfdll.cpp genericstructs.cpp unipoly.cpp ctokenizer.cpp xmltokenizer.cpp


libyacasplatform_a_SOURCES = platmath.cpp grower.cpp stdstubs.cpp obmalloc.cpp lisphash.cpp 	lispstring.cpp mathutil.cpp yacasbase.cpp

libyacasplatform_a_LIBADD = @NUMBERS_LIB@
libyacasnumbers_a_SOURCES = anumber.cpp yacasnumbers.cpp 
libgmpnumbers_a_SOURCES = gmpnumbers.cpp 

EXTRA_DIST = anumber.inl deffile.inl epocfileio.cpp epocmain.cpp 	epocyacas.hrh epocyacas.rss epocyacas.mmp 	epocstubs.cpp grower.inl lisphash.inl lispobject.inl 	lispstring.inl standard.inl 	win32dll.cpp 	depend.dep makefile.beos 	convertcctocpp.bat 	plat/linux32/lisptype.h 	plat/linux32/stubs.inl 	plat/linux32/platfileio.h 	plat/linux32/platdll.h 	plat/linux64/lisptype.h 	plat/linux64/stubs.inl 	plat/linux64/platfileio.h 	plat/linux64/platdll.h 	plat/epoc32/lisptype.h 	plat/epoc32/stubs.inl 	plat/epoc32/platdll.h 	plat/epoc32/platfileio.h 	plat/beos/lisptype.h 	plat/beos/stubs.inl 	plat/beos/platfileio.h 	plat/beos/platdll.h 	plat/win32/lisptype.h 	plat/win32/platdll.h   	plat/win32/platfileio.h 	plat/win32/stubs.inl  unipoly.h   	plat/win32/win32commandline.cpp 	plat/win32/win32commandline.h   	plat/win32/yacas.dsp            	plat/win32/yacas_exe.dsp        	plat/win32/yacasmain-win32.cpp makefile.debug

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)

CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libgmpnumbers_a_LIBADD = 
libgmpnumbers_a_OBJECTS =  gmpnumbers.o
libyacasnumbers_a_LIBADD = 
libyacasnumbers_a_OBJECTS =  anumber.o yacasnumbers.o
libyacasplatform_a_DEPENDENCIES = 
libyacasplatform_a_OBJECTS =  platmath.o grower.o stdstubs.o obmalloc.o \
lisphash.o lispstring.o mathutil.o yacasbase.o
libyacas_a_LIBADD = 
libyacas_a_OBJECTS =  deffile.o infixparser.o lispatom.o \
lispcleanupstack.o lispenvironment.o lispeval.o lispio.o lispobject.o \
lispparser.o lispuserfunc.o mathcommands.o mathenvironment.o \
mathuserfunc.o standard.o stdfileio.o arggetter.o stringio.o \
tokenizer.o yacasapi.o genericobject.o arrayclass.o lispevalhash.o \
patterns.o patternclass.o substitute.o mathcommands2.o mathcommands3.o \
errors.o patcher.o lispplugin.o elfdll.o genericstructs.o unipoly.o \
ctokenizer.o xmltokenizer.o
AR = ar
PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)

yacas_OBJECTS =  yacasmain.o commandline.o unixcommandline.o \
stdcommandline.o
yacas_DEPENDENCIES =  libyacas.a libyacasplatform.a
testnum_OBJECTS =  anumber.o grower.o lispstring.o stdstubs.o obmalloc.o \
testnum.o mathutil.o
testnum_LDADD = $(LDADD)
testnum_DEPENDENCIES = 
testnum_LDFLAGS = 
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libgmpnumbers_a_SOURCES) $(libyacasnumbers_a_SOURCES) $(libyacasplatform_a_SOURCES) $(libyacas_a_SOURCES) $(yacas_SOURCES) $(testnum_SOURCES)
OBJECTS = $(libgmpnumbers_a_OBJECTS) $(libyacasnumbers_a_OBJECTS) $(libyacasplatform_a_OBJECTS) $(libyacas_a_OBJECTS) $(yacas_OBJECTS) $(testnum_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(srcdir)/depend.dep
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

libgmpnumbers.a: $(libgmpnumbers_a_OBJECTS) $(libgmpnumbers_a_DEPENDENCIES)
	-rm -f libgmpnumbers.a
	$(AR) cru libgmpnumbers.a $(libgmpnumbers_a_OBJECTS) $(libgmpnumbers_a_LIBADD)
	$(RANLIB) libgmpnumbers.a

libyacasnumbers.a: $(libyacasnumbers_a_OBJECTS) $(libyacasnumbers_a_DEPENDENCIES)
	-rm -f libyacasnumbers.a
	$(AR) cru libyacasnumbers.a $(libyacasnumbers_a_OBJECTS) $(libyacasnumbers_a_LIBADD)
	$(RANLIB) libyacasnumbers.a

libyacasplatform.a: $(libyacasplatform_a_OBJECTS) $(libyacasplatform_a_DEPENDENCIES)
	-rm -f libyacasplatform.a
	$(AR) cru libyacasplatform.a $(libyacasplatform_a_OBJECTS) $(libyacasplatform_a_LIBADD)
	$(RANLIB) libyacasplatform.a

libyacas.a: $(libyacas_a_OBJECTS) $(libyacas_a_DEPENDENCIES)
	-rm -f libyacas.a
	$(AR) cru libyacas.a $(libyacas_a_OBJECTS) $(libyacas_a_LIBADD)
	$(RANLIB) libyacas.a

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	     $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

yacas: $(yacas_OBJECTS) $(yacas_DEPENDENCIES)
	@rm -f yacas
	$(CXXLINK) $(yacas_LDFLAGS) $(yacas_OBJECTS) $(yacas_LDADD) $(LIBS)

testnum: $(testnum_OBJECTS) $(testnum_DEPENDENCIES)
	@rm -f testnum
	$(CXXLINK) $(testnum_LDFLAGS) $(testnum_OBJECTS) $(testnum_LDADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/plat/beos $(distdir)/plat/epoc32 \
	   $(distdir)/plat/linux32 $(distdir)/plat/linux64 \
	   $(distdir)/plat/win32
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-noinstLIBRARIES clean-compile clean-binPROGRAMS \
		clean-noinstPROGRAMS clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-noinstLIBRARIES distclean-compile \
		distclean-binPROGRAMS distclean-noinstPROGRAMS \
		distclean-tags distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-binPROGRAMS \
		maintainer-clean-noinstPROGRAMS maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir info-am info dvi-am dvi check check-am installcheck-am \
installcheck install-exec-am install-exec install-data-am install-data \
install-am install uninstall-am uninstall all-redirect all-am all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


anumber.o: anumber.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl anumber.h \
 grower.h yacasbase.h grower.inl lispassert.h choices.h lispstring.h \
 refcount.h lispstring.inl anumber.inl mathutil.h
arggetter.o: arggetter.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispenvironment.h yacasbase.h lispobject.h refcount.h lispassert.h \
 choices.h lispstring.h grower.h grower.inl lispstring.inl \
 genericobject.h evalfunc.h lispobject.inl lisperror.h lisphash.h \
 lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h deffile.inl \
 ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h standard.h lispatom.h numbers.h \
 standard.inl errors.h lispeval.h arggetter.h platmath.h \
 genericstructs.h
arrayclass.o: arrayclass.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 arrayclass.h yacasbase.h lispobject.h refcount.h lispassert.h \
 choices.h lispstring.h grower.h grower.inl lispstring.inl \
 genericobject.h evalfunc.h lispobject.inl lisperror.h arrayclass.inl
commandline.o: commandline.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 commandline.h lispstring.h yacasbase.h grower.h grower.inl \
 lispassert.h choices.h refcount.h lispstring.inl
ctokenizer.o: ctokenizer.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl yacas.h \
 yacasbase.h lispstring.h grower.h grower.inl lispassert.h choices.h \
 refcount.h lispstring.inl stringio.h lispio.h tokenizer.h lisphash.h \
 lisphash.inl lispevalhash.h lispobject.h genericobject.h evalfunc.h \
 lispobject.inl lisperror.h infixparser.h lispparser.h stdfileio.h \
 lispenvironment.h lispcleanupstack.h deffile.h deffile.inl ramdisk.h \
 lispglobals.h lispplugin.h ctokenizer.h xmltokenizer.h \
 plat/linux32/platfileio.h lispatom.h lispeval.h mathenvironment.h \
 lispuserfunc.h numbers.h
deffile.o: deffile.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl deffile.h \
 yacasbase.h lisphash.h grower.h grower.inl lispassert.h choices.h \
 lispstring.h refcount.h lispstring.inl lisphash.inl deffile.inl \
 lispuserfunc.h lispobject.h genericobject.h evalfunc.h lispobject.inl \
 lisperror.h lispenvironment.h lispevalhash.h lispcleanupstack.h \
 ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h standard.h lispatom.h numbers.h \
 standard.inl plat/linux32/platfileio.h
elfdll.o: elfdll.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispenvironment.h yacasbase.h lispobject.h refcount.h lispassert.h \
 choices.h lispstring.h grower.h grower.inl lispstring.inl \
 genericobject.h evalfunc.h lispobject.inl lisperror.h lisphash.h \
 lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h deffile.inl \
 ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h plat/linux32/platdll.h \
 plat/linux32/../../lispplugin.h
epocfileio.o: epocfileio.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 stdfileio.h yacasbase.h lispio.h lispenvironment.h lispobject.h \
 refcount.h lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h plat/linux32/platfileio.h
epocmain.o: epocmain.cpp epocyacas.hrh yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl yacas.h yacasbase.h lispstring.h grower.h \
 grower.inl lispassert.h choices.h refcount.h lispstring.inl \
 stringio.h lispio.h tokenizer.h lisphash.h lisphash.inl \
 lispevalhash.h lispobject.h genericobject.h evalfunc.h lispobject.inl \
 lisperror.h infixparser.h lispparser.h stdfileio.h lispenvironment.h \
 lispcleanupstack.h deffile.h deffile.inl ramdisk.h lispglobals.h \
 lispplugin.h ctokenizer.h xmltokenizer.h plat/linux32/platfileio.h \
 lispatom.h lispeval.h mathenvironment.h lispuserfunc.h commandline.h \
 standard.h numbers.h standard.inl
epocstubs.o: epocstubs.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lisperror.h lispstring.h yacasbase.h grower.h grower.inl lispassert.h \
 choices.h refcount.h lispstring.inl
errors.o: errors.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispenvironment.h yacasbase.h lispobject.h refcount.h lispassert.h \
 choices.h lispstring.h grower.h grower.inl lispstring.inl \
 genericobject.h evalfunc.h lispobject.inl lisperror.h lisphash.h \
 lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h deffile.inl \
 ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h standard.h lispatom.h numbers.h \
 standard.inl lispeval.h errors.h
genericobject.o: genericobject.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl genericobject.h yacasbase.h
genericstructs.o: genericstructs.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl genericstructs.h yacasbase.h genericobject.h
gmpnumbers.o: gmpnumbers.cpp plat/linux32/lisptype.h \
 plat/linux32/../../choices.h numbers.h lispenvironment.h yacasbase.h \
 yacasprivate.h stubs.h plat/linux32/stubs.inl lispobject.h refcount.h \
 lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h standard.h lispatom.h \
 standard.inl platmath.h
grower.o: grower.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl grower.h \
 yacasbase.h grower.inl lispassert.h choices.h
infixparser.o: infixparser.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispassert.h choices.h infixparser.h yacasbase.h lispparser.h \
 lispobject.h refcount.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 tokenizer.h lispio.h lisphash.h lisphash.inl lispatom.h standard.h \
 lispenvironment.h lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h xmltokenizer.h numbers.h standard.inl
lispatom.o: lispatom.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispatom.h yacasbase.h lispobject.h refcount.h lispassert.h choices.h \
 lispstring.h grower.h grower.inl lispstring.inl genericobject.h \
 evalfunc.h lispobject.inl lisperror.h
lispcleanupstack.o: lispcleanupstack.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispcleanupstack.h yacasbase.h grower.h \
 grower.inl lispassert.h choices.h
lispenvironment.o: lispenvironment.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl choices.h lispenvironment.h lispobject.h \
 refcount.h lispassert.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h lispeval.h lispatom.h \
 standard.h numbers.h standard.inl lispuserfunc.h mathuserfunc.h
lispeval.o: lispeval.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispeval.h yacasbase.h lispobject.h refcount.h lispassert.h choices.h \
 lispstring.h grower.h grower.inl lispstring.inl genericobject.h \
 evalfunc.h lispobject.inl lisperror.h lispenvironment.h lisphash.h \
 lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h deffile.inl \
 ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h lispuserfunc.h standard.h lispatom.h \
 numbers.h standard.inl plat/linux32/platfileio.h infixparser.h \
 lispparser.h errors.h
lispevalhash.o: lispevalhash.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispevalhash.h yacasbase.h lispobject.h \
 refcount.h lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl
lisphash.o: lisphash.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lisperror.h lispstring.h grower.h grower.inl \
 lispassert.h choices.h refcount.h lispstring.inl lisphash.h \
 lisphash.inl
lispio.o: lispio.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl lispio.h \
 yacasbase.h
lispobject.o: lispobject.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispobject.h yacasbase.h refcount.h lispassert.h choices.h \
 lispstring.h grower.h grower.inl lispstring.inl genericobject.h \
 evalfunc.h lispobject.inl lisperror.h
lispparser.o: lispparser.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispparser.h yacasbase.h lispobject.h refcount.h lispassert.h \
 choices.h lispstring.h grower.h grower.inl lispstring.inl \
 genericobject.h evalfunc.h lispobject.inl lisperror.h tokenizer.h \
 lispio.h lisphash.h lisphash.inl lispatom.h
lispplugin.o: lispplugin.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispenvironment.h yacasbase.h lispobject.h refcount.h lispassert.h \
 choices.h lispstring.h grower.h grower.inl lispstring.inl \
 genericobject.h evalfunc.h lispobject.inl lisperror.h lisphash.h \
 lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h deffile.inl \
 ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h
lispstring.o: lispstring.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispstring.h yacasbase.h grower.h grower.inl lispassert.h choices.h \
 refcount.h lispstring.inl
lispuserfunc.o: lispuserfunc.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispuserfunc.h yacasbase.h lispobject.h \
 refcount.h lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lispenvironment.h lisphash.h lisphash.inl lispevalhash.h \
 lispcleanupstack.h deffile.h deffile.inl ramdisk.h lispio.h \
 stringio.h lispglobals.h lispplugin.h ctokenizer.h tokenizer.h \
 xmltokenizer.h standard.h lispatom.h numbers.h standard.inl
mathcommands.o: mathcommands.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispenvironment.h lispobject.h refcount.h \
 lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h standard.h lispatom.h \
 numbers.h standard.inl lispeval.h lispparser.h stdfileio.h \
 plat/linux32/platfileio.h infixparser.h lispuserfunc.h mathuserfunc.h \
 platmath.h anumber.h anumber.inl arrayclass.h arrayclass.inl \
 patternclass.h patterns.h substitute.h errors.h arggetter.h
mathcommands2.o: mathcommands2.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispenvironment.h lispobject.h refcount.h \
 lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h standard.h lispatom.h \
 numbers.h standard.inl lispeval.h lispparser.h stdfileio.h \
 plat/linux32/platfileio.h infixparser.h lispuserfunc.h mathuserfunc.h \
 platmath.h anumber.h anumber.inl arrayclass.h arrayclass.inl \
 patternclass.h patterns.h substitute.h errors.h
mathcommands3.o: mathcommands3.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispenvironment.h lispobject.h refcount.h \
 lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h standard.h lispatom.h \
 numbers.h standard.inl lispeval.h lispparser.h stdfileio.h \
 plat/linux32/platfileio.h infixparser.h lispuserfunc.h mathuserfunc.h \
 platmath.h anumber.h anumber.inl arrayclass.h arrayclass.inl \
 patternclass.h patterns.h substitute.h errors.h patcher.h \
 plat/linux32/platdll.h plat/linux32/../../lispplugin.h unipoly.h
mathenvironment.o: mathenvironment.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl mathenvironment.h yacasbase.h \
 lispenvironment.h lispobject.h refcount.h lispassert.h choices.h \
 lispstring.h grower.h grower.inl lispstring.inl genericobject.h \
 evalfunc.h lispobject.inl lisperror.h lisphash.h lisphash.inl \
 lispevalhash.h lispcleanupstack.h deffile.h deffile.inl ramdisk.h \
 lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h lispatom.h standard.h numbers.h \
 standard.inl lispuserfunc.h mathuserfunc.h
mathuserfunc.o: mathuserfunc.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl mathuserfunc.h yacasbase.h lispuserfunc.h \
 lispobject.h refcount.h lispassert.h choices.h lispstring.h grower.h \
 grower.inl lispstring.inl genericobject.h evalfunc.h lispobject.inl \
 lisperror.h lispenvironment.h lisphash.h lisphash.inl lispevalhash.h \
 lispcleanupstack.h deffile.h deffile.inl ramdisk.h lispio.h \
 stringio.h lispglobals.h lispplugin.h ctokenizer.h tokenizer.h \
 xmltokenizer.h lispeval.h standard.h lispatom.h numbers.h \
 standard.inl patterns.h patternclass.h
mathutil.o: mathutil.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl
obmalloc.o: obmalloc.cpp plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl
patcher.o: patcher.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispio.h standard.h lispobject.h refcount.h \
 lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lispenvironment.h lisphash.h lisphash.inl lispevalhash.h \
 lispcleanupstack.h deffile.h deffile.inl ramdisk.h stringio.h \
 lispglobals.h lispplugin.h ctokenizer.h tokenizer.h xmltokenizer.h \
 lispatom.h numbers.h standard.inl
patternclass.o: patternclass.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl patternclass.h lispobject.h yacasbase.h \
 refcount.h lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 patterns.h lispenvironment.h lisphash.h lisphash.inl lispevalhash.h \
 lispcleanupstack.h deffile.h deffile.inl ramdisk.h lispio.h \
 stringio.h lispglobals.h lispplugin.h ctokenizer.h tokenizer.h \
 xmltokenizer.h
patterns.o: patterns.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl patterns.h grower.h grower.inl lispassert.h \
 choices.h lispenvironment.h lispobject.h refcount.h lispstring.h \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h standard.h lispatom.h \
 numbers.h standard.inl mathuserfunc.h lispuserfunc.h lispeval.h log.h
platmath.o: platmath.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispobject.h refcount.h lispassert.h choices.h \
 lispstring.h grower.h grower.inl lispstring.inl genericobject.h \
 evalfunc.h lispobject.inl lisperror.h lispatom.h lispenvironment.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h
standard.o: standard.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 standard.h yacasbase.h lispobject.h refcount.h lispassert.h choices.h \
 lispstring.h grower.h grower.inl lispstring.inl genericobject.h \
 evalfunc.h lispobject.inl lisperror.h lispenvironment.h lisphash.h \
 lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h deffile.inl \
 ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h lispatom.h numbers.h standard.inl \
 plat/linux32/platfileio.h mathutil.h infixparser.h lispparser.h \
 lispeval.h
stdcommandline.o: stdcommandline.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl stdcommandline.h yacasbase.h commandline.h \
 lispstring.h grower.h grower.inl lispassert.h choices.h refcount.h \
 lispstring.inl
stdfileio.o: stdfileio.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 stdfileio.h yacasbase.h lispio.h lispenvironment.h lispobject.h \
 refcount.h lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h plat/linux32/platfileio.h
stdstubs.o: stdstubs.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lisperror.h lispstring.h yacasbase.h grower.h grower.inl lispassert.h \
 choices.h refcount.h lispstring.inl
stringio.o: stringio.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 stringio.h yacasbase.h lispio.h lispstring.h grower.h grower.inl \
 lispassert.h choices.h refcount.h lispstring.inl
substitute.o: substitute.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 substitute.h yacasbase.h lispobject.h refcount.h lispassert.h \
 choices.h lispstring.h grower.h grower.inl lispstring.inl \
 genericobject.h evalfunc.h lispobject.inl lisperror.h lispatom.h \
 standard.h lispenvironment.h lisphash.h lisphash.inl lispevalhash.h \
 lispcleanupstack.h deffile.h deffile.inl ramdisk.h lispio.h \
 stringio.h lispglobals.h lispplugin.h ctokenizer.h tokenizer.h \
 xmltokenizer.h numbers.h standard.inl
testnum.o: testnum.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl anumber.h \
 grower.h yacasbase.h grower.inl lispassert.h choices.h lispstring.h \
 refcount.h lispstring.inl anumber.inl
tokenizer.o: tokenizer.cpp tokenizer.h yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispstring.h grower.h grower.inl lispassert.h \
 choices.h refcount.h lispstring.inl lispio.h lisphash.h lisphash.inl \
 lisperror.h numbers.h lispenvironment.h lispobject.h genericobject.h \
 evalfunc.h lispobject.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h xmltokenizer.h
unipoly.o: unipoly.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl unipoly.h \
 yacasbase.h grower.h grower.inl lispassert.h choices.h
unixcommandline.o: unixcommandline.cpp yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl unixcommandline.h yacasbase.h commandline.h \
 lispstring.h grower.h grower.inl lispassert.h choices.h refcount.h \
 lispstring.inl
win32dll.o: win32dll.cpp yacasprivate.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h stubs.h plat/linux32/stubs.inl \
 lispenvironment.h yacasbase.h lispobject.h refcount.h lispassert.h \
 choices.h lispstring.h grower.h grower.inl lispstring.inl \
 genericobject.h evalfunc.h lispobject.inl lisperror.h lisphash.h \
 lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h deffile.inl \
 ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h ctokenizer.h \
 tokenizer.h xmltokenizer.h plat/linux32/platdll.h \
 plat/linux32/../../lispplugin.h
xmltokenizer.o: xmltokenizer.cpp lisperror.h plat/linux32/lisptype.h \
 plat/linux32/../../choices.h lispstring.h yacasbase.h yacasprivate.h \
 stubs.h plat/linux32/stubs.inl grower.h grower.inl lispassert.h \
 choices.h refcount.h lispstring.inl xmltokenizer.h tokenizer.h \
 lispio.h lisphash.h lisphash.inl
yacasapi.o: yacasapi.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl yacas.h lispstring.h grower.h grower.inl \
 lispassert.h choices.h refcount.h lispstring.inl stringio.h lispio.h \
 tokenizer.h lisphash.h lisphash.inl lispevalhash.h lispobject.h \
 genericobject.h evalfunc.h lispobject.inl lisperror.h infixparser.h \
 lispparser.h stdfileio.h lispenvironment.h lispcleanupstack.h \
 deffile.h deffile.inl ramdisk.h lispglobals.h lispplugin.h \
 ctokenizer.h xmltokenizer.h plat/linux32/platfileio.h lispatom.h \
 lispeval.h mathenvironment.h lispuserfunc.h mathcommands.h standard.h \
 numbers.h standard.inl
yacasbase.o: yacasbase.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl
yacasmain.o: yacasmain.cpp yacas.h yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl lispstring.h grower.h grower.inl lispassert.h \
 choices.h refcount.h lispstring.inl stringio.h lispio.h tokenizer.h \
 lisphash.h lisphash.inl lispevalhash.h lispobject.h genericobject.h \
 evalfunc.h lispobject.inl lisperror.h infixparser.h lispparser.h \
 stdfileio.h lispenvironment.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispglobals.h lispplugin.h ctokenizer.h \
 xmltokenizer.h plat/linux32/platfileio.h lispatom.h lispeval.h \
 mathenvironment.h lispuserfunc.h unixcommandline.h commandline.h \
 stdcommandline.h standard.h numbers.h standard.inl arggetter.h \
 errors.h
yacasnumbers.o: yacasnumbers.cpp yacasbase.h yacasprivate.h \
 plat/linux32/lisptype.h plat/linux32/../../choices.h stubs.h \
 plat/linux32/stubs.inl numbers.h lispenvironment.h lispobject.h \
 refcount.h lispassert.h choices.h lispstring.h grower.h grower.inl \
 lispstring.inl genericobject.h evalfunc.h lispobject.inl lisperror.h \
 lisphash.h lisphash.inl lispevalhash.h lispcleanupstack.h deffile.h \
 deffile.inl ramdisk.h lispio.h stringio.h lispglobals.h lispplugin.h \
 ctokenizer.h tokenizer.h xmltokenizer.h standard.h lispatom.h \
 standard.inl anumber.h anumber.inl platmath.h

depend:
	gcc -MM *.cpp $(INCLUDES) > depend.dep

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
