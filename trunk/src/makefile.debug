
RANLIB = ranlib



OBJS = anumber.o arggetter.o arrayclass.o commandline.o \
	deffile.o errors.o genericobject.o genericstructs.o \
	grower.o infixparser.o lispatom.o lispcleanupstack.o         \
	lispenvironment.o lispeval.o lispevalhash.o lisphash.o       \
	lispio.o lispobject.o lispparser.o lispplugin.o lispstring.o  \
	lispuserfunc.o mathcommands.o mathcommands2.o mathcommands3.o  \
	mathenvironment.o mathuserfunc.o mathutil.o patcher.o          \
	patternclass.o patterns.o platmath.o standard.o                \
	stdcommandline.o stdfileio.o stdstubs.o obmalloc.o stringio.o             \
	substitute.o tokenizer.o  ctokenizer.o xmltokenizer.o         \
	yacasapi.o yacasnumbers.o unipoly.o elfdll.o

.SUFFIXES: .cpp 

.cpp.o:
	gcc -x c++ $(INC) -c $<

all: libyacasdebug.a yacasdebug

INC = -I./plat/linux32/  -DDEBUG_MODE -DSCRIPT_DIR="\"./\"" -DVERSION="\"Debug\"" \
	-DUSE_ASSERT -DYACAS_DEBUG

libyacasdebug.a : $(OBJS)
	$(AR) cru libyacasdebug.a $(OBJS)
	$(RANLIB) libyacasdebug.a

yacasdebug: yacasmain.o elfdll.o commandline.o unixcommandline.o stdcommandline.o debugmem.o libyacasdebug.a
	gcc -o yacasdebug yacasmain.o elfdll.o commandline.o unixcommandline.o stdcommandline.o debugmem.o libyacasdebug.a -lm -ldl

#	-rm -f libyacasdebug.a


testscriptdir = ../scripts/
yacastest = ./yacasdebug -pc --rootdir $(testscriptdir)
testtarget = debugtest

include ../scripts/maketest

        
