			Arbitrary precision numerical algorithms

*INTRO This chapter documents some numerical algorithms used in Yacas for exact
integer calculations as well as for multiple precision floating-point
calculations, gives brief descriptions of the non-trivial algorithms and
estimates of the computational cost.


		Basic arithmetic

Currently, Yacas uses either internal math (the {yacasnumbers} library) or the
GNU multiple precision library {gmp}. The algorithms for basic arithmetic in
the internal math mode are currently rather slow compared with {gmp}. If $P$ is
the number of digits of precision, then multiplication and division take
$M(P)=O(P^2)$ operations in the internal math. Much faster algorithms
(Karatsuba / Toom-Cook / FFT multiplication, Newton-Raphson division etc.) are
implemented in {gmp} where at large precision $M(P)=O(P*Ln(P))$. In the
computation cost estimations of this chapter we shall assume that $M(P)$ is at
least linear in $P$. 

Warning: calculations with internal math with precision exceeding 10,000 digits are currently impractically slow.

*INCLUDE algorithms-elemfunc.chapt
*INCLUDE algorithms-specfunc.chapt

